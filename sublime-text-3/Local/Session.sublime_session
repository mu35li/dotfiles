{
	"folder_history":
	[
		"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_05",
		"/home/julian/git/open3-dev",
		"/home/julian/uni/hlr/uni-mod-hlr",
		"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_04",
		"/home/julian/git/grdr",
		"/home/julian/git/grdr/panda.js-engine-master",
		"/home/julian/uni/hlr",
		"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_03/BuengenerDeinertGawehn",
		"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_03/BuengenerDeinertGawehn/pde",
		"/home/julian/git/deinert-epplee.github.io",
		"/srv/http",
		"/home/julian/git/IZARIAM",
		"/home/julian/git/remoteOpen3-dev/open3-dev",
		"/home/julian/git/people",
		"/home/julian/git/tripping-archer",
		"/home/julian/git/people/people",
		"/home/julian/git/mu35li.github.io"
	],
	"last_version": 3083,
	"last_window_id": 40,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1061.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"comab",
						"compareBelowBands"
					],
					[
						"band",
						"bandsAboveBase"
					],
					[
						"for",
						"for	for (…) {…}"
					],
					[
						"delte",
						"deleted"
					],
					[
						"item",
						"item_uid"
					],
					[
						"baseline",
						"baselines"
					],
					[
						"lineite",
						"lineItemId"
					],
					[
						"lineit",
						"lineItemId"
					],
					[
						"get",
						"getBaseLineForLineItem"
					],
					[
						"Matrix_",
						"Matrix_In"
					],
					[
						"pther",
						"pthread_arguments"
					],
					[
						"Matri",
						"Matrix"
					],
					[
						"Matr",
						"Matrix"
					],
					[
						"pthre",
						"pthread_arguments"
					],
					[
						"pt",
						"pthread_arguments"
					],
					[
						"arc",
						"arc_rrcKey"
					],
					[
						"selec",
						"select"
					],
					[
						"jqeur",
						"jqueryHandle"
					],
					[
						"type",
						"type"
					],
					[
						"validation",
						"validation_type_uid"
					],
					[
						"Dat",
						"DataInvoiceManagement"
					],
					[
						"user",
						"user_id"
					],
					[
						"mee",
						"meeting_uid"
					],
					[
						"S",
						"SELECT"
					],
					[
						"res",
						"result"
					],
					[
						"getall",
						"get_all_members_of_board"
					],
					[
						"getallB",
						"get_all_boards"
					],
					[
						"ke",
						"keyboard"
					],
					[
						"parti",
						"particleContainer"
					],
					[
						"sprite",
						"spriteContainer"
					],
					[
						"blur",
						"blurfilter"
					],
					[
						"blurf",
						"blurfilter"
					],
					[
						"drunk",
						"drunkness"
					],
					[
						"coll",
						"collision"
					],
					[
						"test",
						"testParticles"
					],
					[
						"testpart",
						"testParticles"
					],
					[
						"posi",
						"position"
					],
					[
						"spee",
						"speedVector"
					],
					[
						"mit",
						"mittelpunktY"
					],
					[
						"dr",
						"drinkBox"
					],
					[
						"part",
						"particleEmitter"
					],
					[
						"add",
						"addTo"
					],
					[
						"paren",
						"parent"
					],
					[
						"show",
						"showValidationModal"
					],
					[
						"jqer",
						"jqueryHandle"
					],
					[
						"jque",
						"jqueryHandle"
					],
					[
						"has",
						"hasClass"
					],
					[
						"validat",
						"validate-line"
					],
					[
						"validatitle",
						"validateTitle"
					],
					[
						"valida",
						"validationId"
					],
					[
						"lineItem",
						"lineItemId"
					],
					[
						"validate",
						"validate-line"
					],
					[
						"save",
						"saveValidationType"
					],
					[
						"Data",
						"DataCCR"
					],
					[
						"include",
						"include_once"
					],
					[
						"header",
						"header"
					],
					[
						"reson",
						"reason"
					],
					[
						"currenc",
						"currencySign"
					],
					[
						"curren",
						"currencyList"
					],
					[
						"select",
						"selectpicker"
					],
					[
						"curre",
						"currencyList"
					],
					[
						"currete",
						"currentTemplateContractId"
					],
					[
						"audit",
						"auditUser"
					],
					[
						"pos",
						"position"
					],
					[
						"acces",
						"accessList"
					],
					[
						"acce",
						"accessList"
					],
					[
						"publi",
						"published"
					],
					[
						"arra",
						"arrayMonth"
					],
					[
						"cuso",
						"customApprovers"
					],
					[
						"unse",
						"unset"
					],
					[
						"defau",
						"defaultApprovers"
					],
					[
						"arraymer",
						"array_merge"
					],
					[
						"approver",
						"approverSLAs"
					],
					[
						"approv",
						"approverSLAs"
					],
					[
						"DEFAULT_APPRO",
						"SLA_DEFAULT_APPROVERS"
					],
					[
						"defa",
						"defaultApprovers"
					],
					[
						"contr",
						"contractId"
					],
					[
						"db_get",
						"db_get_all"
					],
					[
						"custom",
						"customApprovers"
					],
					[
						"ex",
						"exists"
					],
					[
						"all",
						"allUsers"
					],
					[
						"proi",
						"provider"
					],
					[
						"savesla",
						"saveSLAApprover"
					],
					[
						"update",
						"updateAuditUserRights"
					],
					[
						"board",
						"board_uid"
					],
					[
						"meetd",
						"meetingDetail"
					],
					[
						"sla",
						"slaUid"
					],
					[
						"meet",
						"meeting"
					],
					[
						"meeting",
						"meeting_uid"
					],
					[
						"autoap",
						"autoApproveTime"
					],
					[
						"updat",
						"updateAttendeeStatus"
					],
					[
						"auto",
						"autoApproveTime"
					],
					[
						"draft",
						"draft_file_saved"
					],
					[
						"draft_f",
						"draft_file_info"
					],
					[
						"getallmee",
						"get_all_meetings"
					],
					[
						"aud",
						"auditUser"
					],
					[
						"audi",
						"auditUsers"
					],
					[
						"dbexec",
						"db_execute"
					],
					[
						"existing",
						"existingEntry"
					],
					[
						"exiting",
						"existingEntry"
					],
					[
						"exis",
						"existingEntry"
					],
					[
						"boardui",
						"boardUid"
					],
					[
						"delete",
						"deleted"
					],
					[
						"boarduid",
						"board_uid"
					],
					[
						"getalluser",
						"get_all_users"
					],
					[
						"boar",
						"boardId"
					],
					[
						"creat",
						"created_by"
					],
					[
						"created",
						"created_by"
					],
					[
						"munt",
						"minuteAuthor"
					],
					[
						"currentt",
						"currentTemplateContractId"
					],
					[
						"current",
						"currentTemplateContractId"
					],
					[
						"html",
						"htmlentities"
					],
					[
						"quo",
						"quote"
					],
					[
						"quickcre",
						"quick_create"
					],
					[
						"quickc",
						"quick_create"
					],
					[
						"docuem",
						"document_name"
					],
					[
						"document",
						"document_uid"
					],
					[
						"modal",
						"modalId"
					],
					[
						"cure",
						"currentTemplateContractId"
					],
					[
						"currenttem",
						"currentTemplateProviderId"
					],
					[
						"set",
						"setContractAndProvider"
					],
					[
						"contract",
						"contract_uid"
					],
					[
						"Datac",
						"DataContractManagement"
					],
					[
						"remove",
						"removeClass"
					],
					[
						"po",
						"po-item"
					],
					[
						"CA",
						"CALCULATED_NO_COMMENT"
					],
					[
						"e2",
						"e2eSLAs"
					],
					[
						"e2eS",
						"e2eSLAs"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": ":w",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						":inc",
						"Emmet: Increment Number by 1"
					],
					[
						":",
						":w - Save"
					],
					[
						":r",
						":e - Revert"
					],
					[
						":d",
						"Emmet: Decrement Number by 1"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						":we",
						":w - Save"
					],
					[
						":js",
						"Set Syntax: JavaScript"
					],
					[
						":q",
						"Set Syntax: SQL"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"remov",
						"Package Control: Remove Package"
					],
					[
						"packa",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/julian/git/open3-dev/res/migrations/file 20151113.php",
				"/home/julian/git/open3-dev/gui/js/app.js",
				"/home/julian/git/open3-dev/src/modules/invoice_management/includes/DataInvoiceManagement.inc.php",
				"/home/julian/git/open3-dev/gui/js/utils/templating.js",
				"/home/julian/git/open3-dev/gui/themes/default/default.php",
				"/home/julian/git/open3-dev/gui/js/plugins/dashboarding/dashboarding.js",
				"/home/julian/git/open3-dev/gui/js/plugins/gridsterCharts/gridsterCharts.js",
				"/home/julian/tmp/prog1lib/lib/base.h",
				"/home/julian/Downloads/volume.c",
				"/home/julian/git/open3-dev/res/SQL/access.ini",
				"/home/julian/git/open3-dev/res/migrations/file 20151102.php",
				"/home/julian/git/open3-dev/gui/js/actions/invoice_framework.js",
				"/home/julian/git/open3-dev/install/functions.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/includes/DataGovernance.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/governance.inc.php",
				"/home/julian/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/julian/git/grdr/src/game/guenther.js",
				"/home/julian/git/open3-dev/gui/js/test.js",
				"/home/julian/git/open3-dev/src/modules/invoice_management/invoice_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/invoice_management/gui/html/invoice_framework.php",
				"/home/julian/git/open3-dev/app/logs/app.log",
				"/home/julian/git/open3-dev/configs/config.inc.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/includes/helpers/document_editor_utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/gui/html/document_editor.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/document_editor.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php",
				"/home/julian/git/open3-dev/app/logs/php-errors.log",
				"/home/julian/git/open3-dev/src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/performance_management.inc.php",
				"/home/julian/git/open3-dev/src/includes/classes/class.module.php",
				"/home/julian/git/open3-dev/index.php",
				"/home/julian/git/open3-dev/src/includes/libs/log4php/appenders/LoggerAppenderFile.php",
				"/home/julian/git/open3-dev/src/modules/ccr/includes/DataCCR.inc.php",
				"/home/julian/.config/sublime-text-3/Packages/User/Xdebug.sublime-settings",
				"/home/julian/git/open3-dev/src/includes/classes/class.view.php",
				"/home/julian/git/open3-dev/src/includes/network.inc.php",
				"/home/julian/git/open3-dev/src/includes/security.inc.php",
				"/home/julian/git/open3-dev/src/includes/database.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/adodb.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/drivers/adodb-mysql.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/gui/js/actions/boards.js",
				"/home/julian/git/open3-dev/src/modules/governance/config.xml",
				"/home/julian/git/open3-dev/src/modules/governance/i18/en_us.xml",
				"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_03/BuengenerDeinertGawehn/pde/partdiff-seq.c",
				"/home/julian/git/open3-dev/src/modules/invoice_management/gui/js/actions/invoice_framework.js",
				"/home/julian/.config/sublime-text-3/Packages/Xdebug Client/Xdebug.sublime-settings",
				"/home/julian/git/open3-dev/src/modules/invoice_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/app/logs/maintenance.log",
				"/home/julian/git/open3-dev/src/modules/repository/includes/class.io_engine.inc.php",
				"/home/julian/git/open3-dev/src/includes/utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/core/extensions/class.remote_service.php",
				"/home/julian/git/open3-dev/src/modules/repository/repository.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/includes/helpers/repos_versions.inc.php",
				"/srv/http/izariam/views/view/researchAdvisor.php",
				"/srv/http/izariam/views/view/shipyard.php",
				"/srv/http/izariam/models/update_model.php",
				"/srv/http/izariam/views/view/premiumDetails.php",
				"/srv/http/izariam/views/view/premium.php",
				"/home/julian/git/open3-dev/src/modules/meetings/includes/DataMeetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/user_management/includes/DataUserManagement.inc.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151014.php",
				"/home/julian/git/open3-dev/Makefile",
				"/home/julian/git/open3-dev/.gitignore",
				"/home/julian/git/open3-dev/install/gui/js/maintenance_options.js",
				"/home/julian/git/open3-dev/install/maintenance.php",
				"/home/julian/git/open3-dev/install/actions/migrate_db.inc.php",
				"/home/julian/git/open3-dev/gui/js/actions/design_overview.js",
				"/home/julian/git/open3-dev/src/modules/meetings/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/core/core.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/contract_management/includes/DataContractManagement.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/design_overview.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/includes/DataDesignOverview.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/gui/html/contract_management_start.php",
				"/home/julian/git/open3-dev/gui/js/actions/custom_dashboard.js",
				"/home/julian/git/open3-dev/gui/js/actions/performance_dashboard.js",
				"/home/julian/git/open3-dev/gui/js/actions/contract_management_start.js",
				"/home/julian/git/open3-dev/src/modules/design_overview/extensions/remote_service/rs_custom_ibm/class.rs_custom_ibm.inc.php",
				"/home/julian/git/open3-dev/src/modules/contract_management/contract_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/contract_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/contract_changes/i18/en_us.xml",
				"/home/julian/git/open3-dev/gui/js/actions/edit_sla.js",
				"/home/julian/git/open3-dev/src/modules/meetings/meetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/new_sla.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/edit_sla.php",
				"/home/julian/git/open3-dev/src/includes/classes/class.application.php",
				"/home/julian/git/open3-dev/src/includes/i18.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/includes/helpers/repos_permission_utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/sla_validation.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/approve_sla.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/single_report.php",
				"/home/julian/git/open3-dev/gui/js/actions/single_report.js",
				"/home/julian/git/open3-dev/src/modules/performance_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/governance/gui/html/edit_board.php",
				"/home/julian/git/open3-dev/gui/js/actions/new_sla.js",
				"/home/julian/git/open3-dev/src/modules/relationship_matrix/includes/helpers/DataHandler.php",
				"/home/julian/git/open3-dev/src/modules/multi_supplier/includes/DataMultiSupplier.inc.php",
				"/home/julian/git/open3-dev/src/includes/logging_engine.inc.php",
				"/home/julian/git/open3-dev/app/caches/system_settings.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/includes/DataPerformanceManagement.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/sla_manager.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151016.php",
				"/home/julian/git/open3-dev/src/modules/core/includes/DataCore.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/phpexcel/PHPExcel/Shared/String.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/pear/Auth/Container/ADOdb.php",
				"/home/julian/git/open3-dev/src/modules/user_management/extensions/remote_service/rs_user_management/class.rs_user_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/meetings/extensions/remote_service/rs_meetings/class.rs_meetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/extensions/remote_service/rs_governance/class.rs_governance.inc.php",
				"/home/julian/git/open3-dev/cron.php",
				"/home/julian/git/open3-dev/src/modules/meetings/config.xml",
				"/home/julian/git/open3-dev/src/modules/meetings/extensions/cron/cron_meeting_recorder/class.cron_meeting_recorder.inc.php",
				"/home/julian/git/open3-dev/src/modules/meetings/gui/html/meeting_recorder.php",
				"/home/julian/git/open3-dev/gui/js/actions/meeting_recorder.js",
				"/home/julian/git/open3-dev/src/modules/performance_management/extensions/remote_service/rs_performance_management/class.rs_performance_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/core/data/nein.txt",
				"/home/julian/git/open3-dev/src/modules/meetings/i18/de_de.xml",
				"/home/julian/git/open3-dev/src/modules/governance/gui/html/boards.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151012.php",
				"/home/julian/git/open3-dev/src/modules/aidre_logs/includes/helpers/Actions.php",
				"/home/julian/git/open3-dev/gui/js/actions/meeting_calendar.js",
				"/home/julian/git/open3-dev/gui/metronic/global/plugins/font-awesome/fonts/fontawesome-webfont.woff2",
				"/home/julian/git/open3-dev/gui/js/plugins/annotator_viewer/annotator.custom_viewer.js",
				"/home/julian/git/open3-dev/src/modules/governance/gui/html/organizational_interfaces.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/extensions/remote_service/rs_document_editor/class.rs_document_editor.inc.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/includes/helpers/document_editor_rs_utils.inc.php",
				"/home/julian/git/open3-dev/gui/js/utils/document_editor/document_editor_utils.js",
				"/home/julian/git/open3-dev/src/modules/component_manager/extensions/remote_service/rs_component_manager/class.rs_component_manager.inc.php",
				"/home/julian/git/open3-dev/src/modules/component_manager/component_manager.inc.php"
			],
			"find":
			{
				"height": 34.0
			},
			"find_in_files":
			{
				"height": 90.0,
				"where_history":
				[
					"",
					"/home/julian/git/open3-dev/",
					"open3-dev/",
					"",
					"*.js",
					"*.php",
					"",
					"*.php",
					".php",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"bandsAboveBase",
					"getChangesForLineItem",
					"trigger",
					"loadingOverlay",
					"coffee.png",
					"int",
					"arguments",
					"addArc",
					"VPHist",
					"history",
					"data.push",
					"<tr data-line-id=\"<?= $lineItem['prim_uid'] ?>\" data-line-name=\"<?= $lineItem['name'] ?>\">",
					"80",
					"VARCHAR",
					"data.push",
					"push",
					"data.push",
					"validation_title",
					"validate",
					"1",
					"2",
					"2*this.drunkness",
					"offset",
					"scale",
					"[0]",
					"Bottle",
					"xBottle",
					"guenther",
					"sprite",
					"x",
					"body.",
					"guenther",
					"x",
					"body",
					"validate",
					"price",
					"$lineItem['current_volume']",
					"current_volume",
					"validate-line",
					"validate",
					"validate-line",
					"price",
					"$(this)",
					"console",
					"line-item-save",
					"rs_invoice",
					"line-item-save",
					"radio",
					"validation_uid",
					"validation-id=\"\"",
					"i18(\"LABELS/INVOICE/\".$lineItem['validation_uid'])",
					"validation_titel",
					"validaton",
					"saveLineItem",
					"decimalFormater",
					"saveLineitem",
					"INVOICE/\".$lineItem['validation_uid']",
					"$lineItem['validation_uid']",
					"spend_pool_definition",
					"t_m",
					"flat_fees",
					"invoice_lineitem_flat_fees",
					"flat_fees",
					"savelinei",
					"savelineitem",
					"saveValidationType",
					"process_image_url",
					"image",
					"CustomerLogo",
					"a name=\"CustomerLogo\"",
					"saveLineItem",
					"contract",
					"datepicker",
					"response",
					">>>>",
					"http_host",
					"?remote_service",
					"No access",
					"NO_ACCESS",
					"download",
					"sign",
					"app.i",
					"download",
					"bayertraining",
					"-.-",
					"people",
					"wood",
					"Вы можете указать",
					"бонусы",
					"увеличен",
					"увеличен до",
					"увеличен",
					"Уровень здания ",
					"По крайней мере одно из требуемых исследований не были изучены (Следующее требуемое",
					"По крайней мере одно из требуемых исследований не были изучены (Следующее требуемое:",
					"abbott",
					"currency",
					"hey",
					"// ",
					"migrate",
					"migrate_db.inc.php",
					"migrate_db_inc.php",
					"demolition",
					"complete",
					"relo",
					"build",
					"demolition",
					"cancel",
					"cancelUpgrade",
					"cancel_upgrade",
					"provider_select",
					"#chart_",
					"access",
					"accessList",
					"contract_changes",
					"CONTRACT_CHANGES",
					"contract_changes",
					"initgrid",
					"gridster",
					"initGridster",
					"rs_custom",
					"is_active",
					"saveTileToDatabase",
					"rs_custom",
					"contract_changes",
					"listContracts",
					"client_acc",
					"client_acce"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"The level of the building "
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 21.0
			},
			"input":
			{
				"height": 31.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 100.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.unsaved_changes":
			{
				"height": 100.0
			},
			"output.xdebug":
			{
				"height": 159.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 38.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"applo",
						"app/logs/app.log"
					],
					[
						"datainv",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"rsinvoice",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"dataino",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"templat",
						"gui/js/utils/templating.js"
					],
					[
						"dashboar",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"gridsterchar",
						"gui/js/plugins/gridsterCharts/gridsterCharts.js"
					],
					[
						"defau",
						"gui/themes/default/default.php"
					],
					[
						"templa",
						"gui/js/utils/templating.js"
					],
					[
						"phperr",
						"app/logs/php-errors.log"
					],
					[
						"invoicefram",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoicemana",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"acces",
						"res/SQL/access.ini"
					],
					[
						"performamana",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"access",
						"res/SQL/access.ini"
					],
					[
						"rsinvoic",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"datainvo",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoicefr",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoiceframe",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"datagover",
						"src/modules/governance/includes/DataGovernance.inc.php"
					],
					[
						"gove",
						"src/modules/governance/governance.inc.php"
					],
					[
						"invoiceframew",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"mainten",
						"app/logs/maintenance.log"
					],
					[
						"app",
						"app/logs/app.log"
					],
					[
						"invoicemangeinc",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"datainvoic",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"rs.repos",
						"src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php"
					],
					[
						"configinc",
						"configs/config.inc.php"
					],
					[
						"docueditutinc",
						"src/modules/document_editor/includes/helpers/document_editor_utils.inc.php"
					],
					[
						"documenteditor",
						"src/modules/document_editor/gui/html/document_editor.php"
					],
					[
						"document",
						"src/modules/document_editor/document_editor.inc.php"
					],
					[
						"rsinv",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"performninc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"dataccr",
						"src/modules/ccr/includes/DataCCR.inc.php"
					],
					[
						"invoicemangainc",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoiceframp",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"invocefra",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoice",
						"src/modules/invoice_management/gui/js/actions/invoice_framework.js"
					],
					[
						"",
						"configs/config.inc.php"
					],
					[
						"config",
						"configs/config.inc.php"
					],
					[
						"remoteser",
						"src/modules/core/extensions/class.remote_service.php"
					],
					[
						"rsrepo",
						"src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php"
					],
					[
						"default",
						"gui/themes/default/default.php"
					],
					[
						"performancinc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"invoiceenus",
						"src/modules/invoice_management/i18/en_us.xml"
					],
					[
						"maintenaclo",
						"app/logs/maintenance.log"
					],
					[
						"invoicefra",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoicema",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"remoteserv",
						"src/modules/core/extensions/class.remote_service.php"
					],
					[
						"repos",
						"src/modules/repository/repository.inc.php"
					],
					[
						"invoicemanag",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"datainvoi",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoicemanainc",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"20151014",
						"res/migrations/file 20151014.php"
					],
					[
						"governinc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"maintena",
						"app/logs/maintenance.log"
					],
					[
						"maintelo",
						"app/logs/maintenance.log"
					],
					[
						"mainte",
						"install/maintenance.php"
					],
					[
						"demo",
						"izariam/views/view/demolition.php"
					],
					[
						"governaninc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"all_ac",
						"src/modules/aidre_logs/gui/html/all_actions.php"
					],
					[
						"1020",
						"res/migrations/file 20151020.php"
					],
					[
						"1019",
						"res/migrations/file 20151019.php"
					],
					[
						"1016",
						"res/migrations/file 20151016.php"
					],
					[
						"1014",
						"res/migrations/file 20151014.php"
					],
					[
						"1013",
						"res/migrations/file 20151013.php"
					],
					[
						"default.php",
						"gui/themes/default/default.php"
					],
					[
						"coreinc",
						"src/modules/core/core.inc.php"
					],
					[
						"meetinenus",
						"src/modules/meetings/i18/en_us.xml"
					],
					[
						"customdas",
						"gui/js/actions/custom_dashboard.js"
					],
					[
						"applog",
						"app/logs/app.log"
					],
					[
						"docuem",
						"src/modules/document_editor/gui/html/document_editor.php"
					],
					[
						"performinc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"governancin",
						"src/modules/governance/governance.inc.php"
					],
					[
						"documentediinc",
						"src/modules/document_editor/document_editor.inc.php"
					],
					[
						"performancdashph",
						"src/modules/design_overview/gui/html/performance_dashboard.php"
					],
					[
						"aidrestart",
						"gui/js/actions/aidre_start.js"
					],
					[
						"dash",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"perfrdasphp",
						"src/modules/design_overview/gui/html/performance_dashboard.php"
					],
					[
						"performance",
						"gui/js/actions/performance_dashboard.js"
					],
					[
						"contracmanagem",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"dashbiar",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"phper",
						"app/logs/php-errors.log"
					],
					[
						"contramanagstar",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"rscustomi",
						"src/modules/design_overview/extensions/remote_service/rs_custom_ibm/class.rs_custom_ibm.inc.php"
					],
					[
						"dashboard",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"designover",
						"gui/js/actions/design_overview.js"
					],
					[
						"designoverinc",
						"src/modules/design_overview/includes/DataDesignOverview.inc.php"
					],
					[
						"designoverenus",
						"src/modules/design_overview/i18/en_us.xml"
					],
					[
						"contract_mangenus",
						"src/modules/contract_management/i18/en_us.xml"
					],
					[
						"contracenus",
						"src/modules/contract_changes/i18/en_us.xml"
					],
					[
						"contracmanaginc",
						"src/modules/contract_management/contract_management.inc.php"
					],
					[
						"contractmanag",
						"src/modules/contract_management/includes/DataContractManagement.inc.php"
					],
					[
						"contract",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"newdle",
						"gui/js/actions/new_deliverable.js"
					],
					[
						"newdeli",
						"src/modules/deliverables/gui/html/new_deliverable.php"
					],
					[
						"editdle",
						"src/modules/deliverables/gui/html/edit_deliverable.php"
					],
					[
						"manten",
						"app/logs/maintenance.log"
					],
					[
						"datade",
						"src/modules/deliverables/includes/DataDeliverables.inc.php"
					],
					[
						"delive",
						"src/modules/deliverables/deliverables.inc.php"
					],
					[
						"appl",
						"app/logs/app.log"
					],
					[
						"governanceinc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"perfcof",
						"src/modules/performance_management/config.xml"
					],
					[
						"singlerepo",
						"src/modules/performance_management/gui/html/single_report.php"
					],
					[
						"perfenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"sladash",
						"src/modules/performance_management/gui/html/sla_dashboard.php"
					],
					[
						"dataperf",
						"src/modules/performance_management/includes/DataPerformanceManagement.inc.php"
					],
					[
						"datameeting",
						"src/modules/meetings/includes/DataMeetings.inc.php"
					],
					[
						"meetings",
						"src/modules/meetings/meetings.inc.php"
					],
					[
						"slaval",
						"src/modules/performance_management/gui/html/sla_validation.php"
					],
					[
						"newsla",
						"src/modules/performance_management/gui/html/new_sla.php"
					],
					[
						"invoi",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"aplo",
						"app/logs/app.log"
					],
					[
						"editsla",
						"gui/js/actions/edit_sla.js"
					],
					[
						"approves",
						"src/modules/performance_management/gui/html/approve_sla.php"
					],
					[
						"slavali",
						"src/modules/performance_management/gui/html/sla_validation.php"
					],
					[
						"performmanaenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"editboar",
						"src/modules/governance/gui/html/edit_board.php"
					],
					[
						"perforenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"rsusermanage",
						"src/modules/user_management/extensions/remote_service/rs_user_management/class.rs_user_management.inc.php"
					],
					[
						"rsmeeting",
						"src/modules/meetings/extensions/remote_service/rs_meetings/class.rs_meetings.inc.php"
					],
					[
						"governacinc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"rsgovern",
						"src/modules/governance/extensions/remote_service/rs_governance/class.rs_governance.inc.php"
					],
					[
						"dataperfo",
						"src/modules/performance_management/includes/DataPerformanceManagement.inc.php"
					],
					[
						"slamana",
						"src/modules/performance_management/gui/html/sla_manager.php"
					],
					[
						"system",
						"app/caches/system_settings.inc.php"
					],
					[
						"meetinginc",
						"src/modules/meetings/meetings.inc.php"
					],
					[
						"performnman",
						"src/modules/performance_management/performance_management.inc.php"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 392.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"moduleinstal",
						"moduleInstalled"
					],
					[
						"singlereport",
						"single_report"
					],
					[
						"detailed",
						"detailed_view"
					],
					[
						"fillcurr",
						"fillCurrencyLists"
					],
					[
						"image_",
						"process_image_url"
					],
					[
						"file",
						"getFile"
					],
					[
						"updateaud",
						"updateAuditUserRights"
					],
					[
						"getallactiveus",
						"getAllActiveUsers"
					],
					[
						"futuremeet",
						"updateAttendeeInFutureMeetings"
					],
					[
						"demoli",
						"demolition"
					],
					[
						"admin",
						"admin"
					],
					[
						"loadview",
						"load_view"
					],
					[
						"saveboard",
						"save_board"
					],
					[
						"db_get_co",
						"db_get_col"
					],
					[
						"i18",
						"i18"
					],
					[
						"getalluser",
						"getAllActiveUsers"
					],
					[
						"adduser",
						"addUser"
					],
					[
						"currenc",
						"getCurrencyCode"
					],
					[
						"savekpi",
						"saveProviderKPI"
					],
					[
						"app_log",
						"app_log"
					],
					[
						"kpiimport",
						"kpi_import"
					],
					[
						"deletesla",
						"deleteSLA"
					],
					[
						"quickcrea",
						"quickCreateSLA"
					],
					[
						"quick",
						"quickCodeHandler"
					],
					[
						"newsla",
						"new_sla"
					],
					[
						"getdocu",
						"getDocument"
					],
					[
						"quickcre",
						"quickCreate"
					],
					[
						"getProvider",
						"getProviderForContract"
					],
					[
						"loadvie",
						"load_view"
					],
					[
						"getprovider",
						"getProviderForContract"
					],
					[
						"load_view",
						"load_view"
					],
					[
						"savenotif",
						"save_notification"
					],
					[
						"sendnoti",
						"send_notification"
					],
					[
						"getkpival",
						"getKPIValueForMonth"
					],
					[
						"getbare",
						"getBareKpisForProvider"
					],
					[
						"getcontractfor",
						"getAllContractsForProvider"
					],
					[
						"all provider",
						"getAllProviders"
					],
					[
						"getRowIter",
						"getRowIterator"
					],
					[
						"getallboar",
						"getAllBoards"
					],
					[
						"kpivalue",
						"getKPIValueForMonth"
					],
					[
						"loadmod",
						"load_module"
					],
					[
						"getcontract",
						"getContract"
					],
					[
						"db_tab",
						"db_table_exists"
					],
					[
						"db_table",
						"db_table_exists"
					],
					[
						"tpl",
						"tp-loader"
					],
					[
						"notification",
						"send_notification"
					],
					[
						"user_se",
						"user_settings"
					],
					[
						"suppliers",
						"getAllSuppliers"
					],
					[
						"get supplier",
						"getSuppliers"
					],
					[
						"all supp",
						"getAllSuppliers"
					]
				],
				"width": 1196.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 219.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1920.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"currentline",
						"currentLineItemId"
					],
					[
						"getban",
						"getVolumeBandsForLineItem"
					],
					[
						"band",
						"bandLineItemId"
					],
					[
						"save",
						"saveBand"
					],
					[
						"lineitem",
						"lineItemId"
					],
					[
						"Data",
						"DataInvoiceManagement"
					],
					[
						"comab",
						"compareBelowBands"
					],
					[
						"for",
						"for	for (…) {…}"
					],
					[
						"delte",
						"deleted"
					],
					[
						"item",
						"item_uid"
					],
					[
						"baseline",
						"baselines"
					],
					[
						"lineite",
						"lineItemId"
					],
					[
						"lineit",
						"lineItemId"
					],
					[
						"get",
						"getBaseLineForLineItem"
					],
					[
						"Matrix_",
						"Matrix_In"
					],
					[
						"pther",
						"pthread_arguments"
					],
					[
						"Matri",
						"Matrix"
					],
					[
						"Matr",
						"Matrix"
					],
					[
						"pthre",
						"pthread_arguments"
					],
					[
						"pt",
						"pthread_arguments"
					],
					[
						"arc",
						"arc_rrcKey"
					],
					[
						"selec",
						"select"
					],
					[
						"jqeur",
						"jqueryHandle"
					],
					[
						"type",
						"type"
					],
					[
						"validation",
						"validation_type_uid"
					],
					[
						"Dat",
						"DataInvoiceManagement"
					],
					[
						"user",
						"user_id"
					],
					[
						"mee",
						"meeting_uid"
					],
					[
						"S",
						"SELECT"
					],
					[
						"res",
						"result"
					],
					[
						"getall",
						"get_all_members_of_board"
					],
					[
						"getallB",
						"get_all_boards"
					],
					[
						"ke",
						"keyboard"
					],
					[
						"parti",
						"particleContainer"
					],
					[
						"sprite",
						"spriteContainer"
					],
					[
						"blur",
						"blurfilter"
					],
					[
						"blurf",
						"blurfilter"
					],
					[
						"drunk",
						"drunkness"
					],
					[
						"coll",
						"collision"
					],
					[
						"test",
						"testParticles"
					],
					[
						"testpart",
						"testParticles"
					],
					[
						"posi",
						"position"
					],
					[
						"spee",
						"speedVector"
					],
					[
						"mit",
						"mittelpunktY"
					],
					[
						"dr",
						"drinkBox"
					],
					[
						"part",
						"particleEmitter"
					],
					[
						"add",
						"addTo"
					],
					[
						"paren",
						"parent"
					],
					[
						"show",
						"showValidationModal"
					],
					[
						"jqer",
						"jqueryHandle"
					],
					[
						"jque",
						"jqueryHandle"
					],
					[
						"has",
						"hasClass"
					],
					[
						"validat",
						"validate-line"
					],
					[
						"validatitle",
						"validateTitle"
					],
					[
						"valida",
						"validationId"
					],
					[
						"lineItem",
						"lineItemId"
					],
					[
						"validate",
						"validate-line"
					],
					[
						"include",
						"include_once"
					],
					[
						"header",
						"header"
					],
					[
						"reson",
						"reason"
					],
					[
						"currenc",
						"currencySign"
					],
					[
						"curren",
						"currencyList"
					],
					[
						"select",
						"selectpicker"
					],
					[
						"curre",
						"currencyList"
					],
					[
						"currete",
						"currentTemplateContractId"
					],
					[
						"audit",
						"auditUser"
					],
					[
						"pos",
						"position"
					],
					[
						"acces",
						"accessList"
					],
					[
						"acce",
						"accessList"
					],
					[
						"publi",
						"published"
					],
					[
						"arra",
						"arrayMonth"
					],
					[
						"cuso",
						"customApprovers"
					],
					[
						"unse",
						"unset"
					],
					[
						"defau",
						"defaultApprovers"
					],
					[
						"arraymer",
						"array_merge"
					],
					[
						"approver",
						"approverSLAs"
					],
					[
						"approv",
						"approverSLAs"
					],
					[
						"DEFAULT_APPRO",
						"SLA_DEFAULT_APPROVERS"
					],
					[
						"defa",
						"defaultApprovers"
					],
					[
						"contr",
						"contractId"
					],
					[
						"db_get",
						"db_get_all"
					],
					[
						"custom",
						"customApprovers"
					],
					[
						"ex",
						"exists"
					],
					[
						"all",
						"allUsers"
					],
					[
						"proi",
						"provider"
					],
					[
						"savesla",
						"saveSLAApprover"
					],
					[
						"update",
						"updateAuditUserRights"
					],
					[
						"board",
						"board_uid"
					],
					[
						"meetd",
						"meetingDetail"
					],
					[
						"sla",
						"slaUid"
					],
					[
						"meet",
						"meeting"
					],
					[
						"meeting",
						"meeting_uid"
					],
					[
						"autoap",
						"autoApproveTime"
					],
					[
						"updat",
						"updateAttendeeStatus"
					],
					[
						"auto",
						"autoApproveTime"
					],
					[
						"draft",
						"draft_file_saved"
					],
					[
						"draft_f",
						"draft_file_info"
					],
					[
						"getallmee",
						"get_all_meetings"
					],
					[
						"aud",
						"auditUser"
					],
					[
						"audi",
						"auditUsers"
					],
					[
						"dbexec",
						"db_execute"
					],
					[
						"existing",
						"existingEntry"
					],
					[
						"exiting",
						"existingEntry"
					],
					[
						"exis",
						"existingEntry"
					],
					[
						"boardui",
						"boardUid"
					],
					[
						"delete",
						"deleted"
					],
					[
						"boarduid",
						"board_uid"
					],
					[
						"getalluser",
						"get_all_users"
					],
					[
						"boar",
						"boardId"
					],
					[
						"creat",
						"created_by"
					],
					[
						"created",
						"created_by"
					],
					[
						"munt",
						"minuteAuthor"
					],
					[
						"currentt",
						"currentTemplateContractId"
					],
					[
						"current",
						"currentTemplateContractId"
					],
					[
						"html",
						"htmlentities"
					],
					[
						"quo",
						"quote"
					],
					[
						"quickcre",
						"quick_create"
					],
					[
						"quickc",
						"quick_create"
					],
					[
						"docuem",
						"document_name"
					],
					[
						"document",
						"document_uid"
					],
					[
						"modal",
						"modalId"
					],
					[
						"cure",
						"currentTemplateContractId"
					],
					[
						"currenttem",
						"currentTemplateProviderId"
					],
					[
						"set",
						"setContractAndProvider"
					],
					[
						"contract",
						"contract_uid"
					],
					[
						"Datac",
						"DataContractManagement"
					],
					[
						"remove",
						"removeClass"
					],
					[
						"po",
						"po-item"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/julian/git/open3-dev/gui/js/actions/invoice_framework.js",
					"settings":
					{
						"buffer_size": 66464,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/src/modules/governance/includes/DataGovernance.inc.php",
					"settings":
					{
						"buffer_size": 44932,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "<?php\n\n/**\n * Data handler for invoice management module.\n *\n * @package open3\n * @subpackage  modules.core\n *\n * @license     Commercial\n * @author      Statusgreen\n * @copyright   Statusgreen\n *\n */\n// include base class\ninclude_once(KERNEL_ROOT . 'modules/core/includes/DataHandler.inc.php');\n\n/**\n * Data handler implementation.\n */\nclass DataInvoiceManagement extends DataHandler {\n    /* \n     * don't change the class variables,\n     * because the database-tables have the same name for the certain lineitems\n     *\n     * this names are also declared in 'invoice_framework.js'\n     */\n    \n    /* \n     * name-key for lineitems and table invoice_lineitem_flat_fees\n     */\n    static private $flatFeeKey = 'flat_fees';\n\n    /* \n     * name-key for lineitems and table invoice_lineitem_pxq\n     */\n    static private $pxqKey = 'pxq';\n    \n    /* \n     * name-key for lineitems and table invoice_lineitem_arc_rrc\n     */\n    static private $arc_rrcKey = 'arc_rrc';\n    \n    /* \n     * name-key for lineitems and table invoice_lineitem_t_and_m\n     */\n    static private $tmKey = 't_and_m';\n    \n    /* \n     * name-key for lineitems and table invoice_lineitem_expenses\n     */\n    static private $expensesKey = 'expenses';\n\n    public static function getFlatFeeKey() {\n        return self::$flatFeeKey;\n    }\n\n    public static function getPxQKey() {\n        return self::$pxqKey;\n    }\n\n    public static function getArcRrcKey() {\n        return self::$arc_rrcKey;\n    }\n\n    public static function getTMKey() {\n        return self::$tmKey;\n    }\n\n    public static function getExpensesKey() {\n        return self::$expensesKey;\n    }\n\n   public static function savePO($record) {\n        $prim_uid = $record['prim_uid'];\n        app_log('prim_uid for new po: ' . $prim_uid);\n        \n        if ($prim_uid) {\n            return DataHandler::update('invoice_purchase_orders', $record);\n        }else{\n            return DataHandler::insert('invoice_purchase_orders', $record);\n        }\n\n        return false;\n    }\n\n    public static function getPO($prim_uid) {\n        $sql = 'SELECT * FROM invoice_purchase_orders WHERE prim_uid = '. $prim_uid;\n\n        $result = db_get_row($sql);\n\n        $result['po_start_date_format'] = date_get_date(date_sys_to_local($result['po_start_date']));\n        $result['po_end_date_format'] = date_get_date(date_sys_to_local($result['po_end_date']));\n\n        return $result;\n    }\n\n    public static function getPObyPONumber($poNumber) {\n        $sql = 'SELECT * FROM invoice_purchase_orders WHERE po_number = \"'. $poNumber .'\"';\n        return db_get_row($sql);\n    }\n\n    public static function getAllPOs($deleted=0) {\n        $sql= 'SELECT * FROM invoice_purchase_orders WHERE deleted ='.$deleted;\n        $result = db_get_all($sql);\n\n        foreach ($result as $key => $value) {\n            $result[$key]['po_start_date_format'] = date_get_date(date_sys_to_local($result[$key]['po_start_date']));\n            $result[$key]['po_end_date_format'] = date_get_date(date_sys_to_local($result[$key]['po_end_date']));\n        }\n        \n        return $result;\n    }\n\n    public static function deletePO($prim_uid){\n        $sql = 'UPDATE invoice_purchase_orders SET deleted=\"1\" WHERE prim_uid='.$prim_uid;\n        $allWOs = self::getAllWOsByPO($prim_uid);\n        foreach ($allWOs as $wo) {\n            self::deleteWO($wo['prim_uid']);\n        }\n        return db_execute($sql);\n    }\n\n    public static function saveWO($record) {\n        $prim_uid = $record['prim_uid'];\n\n        if ($prim_uid) {\n            return DataHandler::update('invoice_work_orders', $record);\n        }else{\n            return DataHandler::insert('invoice_work_orders', $record);\n        }\n\n        return false;\n    }\n\n    public static function getWO($prim_uid) {\n        $sql = 'SELECT * FROM invoice_work_orders WHERE prim_uid = '. $prim_uid;\n        $result = db_get_row($sql);\n        app_export($result);\n\n        foreach ($result as $key => $value) {\n            $result['wo_start_date_format'] = date_get_date(date_sys_to_local($result['wo_start_date']));\n            $result['wo_end_date_format'] = date_get_date(date_sys_to_local($result['wo_end_date']));\n        }\n        return $result;\n    }\n\n\n    public static function getPlaneInvoiceTemplate($itUid) {\n        $sqlInvoiceTemplate = sprintf('SELECT * FROM invoice_templates WHERE prim_uid = %d;', $itUid);\n        $invoiceTemplate = db_get_row($sqlInvoiceTemplate);\n        return $invoiceTemplate;\n    }\n\n    public static function getIT($itUid) {\n        $invoiceTemplate = self::getPlaneInvoiceTemplate($itUid);\n        $lineItemCollection = self::loadAllValidLineItems();\n        $invoiceTemplate['forecastAmount'] = 0;\n        foreach ($lineItemCollection as $type => $typedLineItems) {\n            foreach ($typedLineItems as $lineItem) {\n                $amount = 0;\n                switch ($type) {\n                    case self::$flatFeeKey:\n                        $amount = doubleval($lineItem['current_price']);\n                        break;\n                    case self::$pxqKey:\n                    case self::$arc_rrcKey:\n                        $amount = $lineItem['current_volume'] * doubleval($lineItem['current_price_per_unit']);\n                        break;\n                    case self::$tmKey:\n                        $amount = $lineItem['maximum_volume'] * doubleval($lineItem['price_per_unit']);\n                        break;\n                    case self::$expensesKey:\n                        $amount = doubleval($lineItem['maximum_amount_per_invoice']);\n                        break;\n                }\n                $invoiceTemplate['forecastAmount'] += $amount;\n            }\n        }\n\n        return $invoiceTemplate;\n    }\n\n    protected static function loadAllValidLineItems(){\n        $allLineItems = [];\n        $lineItemsKeyList = [\n            self::getFlatFeeKey(),\n            self::getPxQKey(),\n            self::getArcRrcKey(),\n            self::getTMKey(),\n            self::getExpensesKey(),\n        ];\n        foreach($lineItemsKeyList as $key){\n            $lineItemsChunk = self::getAllLineItems($key);\n            $allLineItems[$key] = $lineItemsChunk;\n        }\n        return $allLineItems;\n    }\n\n    public static function getAllWOsByPO($poUid, $deleted=0) {\n        $sql = ('SELECT * FROM invoice_work_orders WHERE po_uid ='.$poUid.' AND deleted = '.$deleted);\n        $result = db_get_all($sql);\n\n        foreach ($result as $key => $value) {\n            $result[$key]['wo_start_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_start_date']));\n            $result[$key]['wo_end_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_end_date']));\n        }\n        return $result;\n \n    }\n\n    public static function getWObyWONumber($woNumber) {\n        $sql = 'SELECT * FROM invoice_work_orders WHERE wo_number = \"'. $woNumber .'\"';\n        $result = db_get_row($sql);\n\n        foreach ($result as $key => $value) {\n            $result[$key]['wo_start_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_start_date']));\n            $result[$key]['wo_end_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_end_date']));\n        }\n        return $result;\n    }\n\n    public static function getAllWOs($deleted=0) {\n        $sql= 'SELECT * FROM invoice_work_orders WHERE deleted ='.$deleted;\n        $result = db_get_all($sql);\n\n        foreach ($result as $key => $value) {\n            $result[$key]['wo_start_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_start_date']));\n            $result[$key]['wo_end_date_format'] = date_get_date(date_sys_to_local($result[$key]['wo_end_date']));\n        }\n        return $result;\n    }\n\n    public static function deleteWO($prim_uid){\n        $sql = 'UPDATE invoice_work_orders SET deleted=\"1\" WHERE prim_uid=\"'.$prim_uid.'\"';\n        $allITs = self::getAllITsByWO($prim_uid);\n        foreach ($allITs as $it) {\n            self::deleteIT($it['prim_uid']);\n        }\n        return db_execute($sql);\n    }\n\n    public static function saveIT($record){\n        if (!isset($record['approver_1']) || is_null($record['approver_1'])) {\n            $record['approver_1'] = 0;\n        }\n            \n        if (!isset($record['approver_2']) || is_null($record['approver_2'])) {\n            $record['approver_2'] = 0;\n        }\n\n        if (!isset($record['frequency_uid']) || is_null($record['frequency_uid'])) {\n            $record['frequency_uid'] = 0;\n        }\n        app_log('data: ' . var_export($record, true));\n        if(isset($record['prim_uid']) && is_numeric($record['prim_uid']) && $record['prim_uid'] > 0) {\n            return DataHandler::update('invoice_templates', $record);\n        } else {\n            $record['prim_uid'] = $record['itUid'];\n            return DataHandler::insert('invoice_templates', $record);\n        }\n        return false;\n    }\n\n    public static function getAllITs($deleted=0) {\n        $sql= 'SELECT * FROM invoice_templates WHERE deleted ='.$deleted;\n        return db_get_all($sql);\n    }\n\n    public static function getAllITsByWO($woUid, $deleted = 0) {\n        $sql = 'SELECT * FROM invoice_templates WHERE deleted = '.$deleted.' AND wo_uid ='.$woUid;\n        return db_get_all($sql);\n    }\n\n    public static function deleteIT($prim_uid){\n        $sql = 'UPDATE invoice_templates SET deleted=\"1\" WHERE prim_uid=\"'.$prim_uid.'\"';\n        $types = array(self::$flatFeeKey, self::$pxqKey, self::$arc_rrcKey, self::$tmKey, self::$expensesKey);\n        foreach ($types as $type){\n            $allLineItems = self::getAllLineItemsByITAndByType($prim_uid, $type);\n\n            foreach ($allLineItems as $lineItem) {\n               self::deleteLineItem($type, $lineItem, $lineItem['prim_uid']);\n            }\n        }\n        \n        return db_execute($sql);\n    }\n\n    public static function getAllLineItems($type, $deleted=0){\n        $timestamp = date_time_get_time();\n        $sql = 'SELECT itpv1.* ';\n        $sql .= 'FROM invoice_template_price_volume AS itpv1 ';\n        $sql .= 'WHERE itpv1.date < ' . $timestamp . ' ';\n        $sql .= 'AND itpv1.deleted=' . $deleted . ' ';\n        $sql .= 'AND itpv1.type=\"' . $type . '\" ';\n        $sql .= 'ORDER by itpv1.date DESC, itpv1.prim_uid DESC';\n        $itemPrices = db_get_all($sql);\n        $sql = 'SELECT lineitem.*, ivt.name as validation_name ';\n        $sql .= 'FROM `invoice_lineitem_' . $type . '` lineitem, `invoice_validation_types` ivt ';\n        $sql .= 'WHERE lineitem.deleted=' . $deleted.' ';\n        $sql .= 'AND lineitem.validation_uid=ivt.prim_uid ';\n        $sql .= 'AND ivt.deleted=0 ORDER BY lineitem.prim_uid';\n        $lineItems = db_get_all($sql);    \n\n        if (isset($lineItems) && $lineItems != null) {\n            switch($type){\n                case self::$flatFeeKey:\n                    foreach ($lineItems as &$flatFee) {\n                        foreach ($itemPrices as $flatFeePrice) {\n                            // replace the current_price with the actuell valid price from the Changes\n                            if ($flatFee['prim_uid'] == $flatFeePrice['item_uid']) {\n                                $flatFee['current_price'] = $flatFeePrice['price'];\n                                continue 2;// start next run for flatFee\n                            } else {\n                                $flatFee['current_price'] = '0';\n                            }\n                        }\n                    }\n                    return $lineItems;\n                    break;\n\n                case self::$pxqKey:\n                    foreach ($lineItems as &$pxq) {\n                        foreach ($itemPrices as $pxqPrice) {\n                            // replace the current_price and current_volume with the actuell valid price from the Changes\n                            if ($pxq['prim_uid'] == $pxqPrice['item_uid']) {\n                                $pxq['current_price_per_unit'] = $pxqPrice['price'];\n                                $pxq['current_volume'] = $pxqPrice['volume'];\n                                continue 2;// start next run for pxq\n                            } else {\n                                $pxq['current_price_per_unit'] = '0';\n                                $pxq['current_volume'] = '0';\n                            }\n                        }\n                    }\n                    return $lineItems;\n                    break;\n\n                case self::$arc_rrcKey:\n                    foreach ($lineItems as &$arc_rrc) {\n                        foreach ($itemPrices as $arc_rrcPrice) {\n                            // replace the current_price and current_volume with the actuell valid price from the Changes\n                            if ($arc_rrc['prim_uid'] == $arc_rrcPrice['item_uid']) {\n                                $arc_rrc['current_price_per_unit'] = $arc_rrcPrice['price'];\n                                $arc_rrc['current_volume'] = $arc_rrcPrice['volume'];\n                                continue 2;// start next run for arc_rrc\n                            } else {\n                                $arc_rrc['current_price_per_unit'] = '0';\n                                $arc_rrc['current_volume'] = '0';\n                            }\n                        }\n                    }\n                    return $lineItems;\n                    break;\n\n                case self::$tmKey:\n                    foreach ($lineItems as &$tm) {\n                        foreach ($itemPrices as $tmPrice) {\n                            // replace the current_price, current_volume, unit and definition with the actuell valid price from the Changes\n                            if ($tm['prim_uid'] == $tmPrice['item_uid']) {\n                                $tm['price_per_unit'] = $tmPrice['price'];\n                                $tm['maximum_volume'] = $tmPrice['volume'];\n                                $tm['unit'] = $tmPrice['unit'];\n                                $tm['role_definition'] = $tmPrice['definition'];\n                                continue 2;// start next run for t_and_m\n                            } else {\n                                $tm['price_per_unit'] = '0';\n                                $tm['maximum_volume'] = '0';\n                                $tm['unit'] = '0';\n                                $tm['role_definition'] = '0';\n                            }\n                        }\n                    }\n                    return $lineItems;\n                    break;\n\n                case self::$expensesKey:\n                    foreach ($lineItems as &$expenses) {\n                        foreach ($itemPrices as $expensesPrice) {\n                            // replace the current_price with the actuell valid price from the Changes\n                            if ($expenses['prim_uid'] == $expensesPrice['item_uid']) {\n                                $expenses['current_price_per_unit'] = $expensesPrice['price'];\n                                continue 2;// start next run for expenses\n                            } else {\n                                $flatFee['current_price_per_unit'] = 0;\n                            }\n                        }\n                    }\n                    return $lineItems;\n                    break;\n                \n                default:\n                    app_log('undefined type: ' . $type, 'error');\n                    break;\n            }\n        } else {\n            return $lineItems;\n        }\n    }\n\n    public static function saveLineItem($type, $record, $template, $id) {\n        $record['template_uid'] = $template;\n        $record['type'] = $type;\n                \n        switch ($type) {\n            case self::$flatFeeKey:\n                $record['name'] = $record[0];\n                $record['definition'] = $record[1];\n                $record['tags'] = $record[2];\n                $record['current_price'] = $record[3];\n                $record['validation_title'] = $record[4];\n                unset($record[0], $record[1], $record[2], $record[3], $record[4]);\n                if ($id == -1){\n                    return DataHandler::insert('invoice_lineitem_flat_fees', $record); \n                } else {\n                    $record['prim_uid'] = $id;\n                    DataHandler::update('invoice_lineitem_flat_fees', $record); \n                    return $id;\n                }\n                break;\n            \n            case self::$pxqKey:\n                app_log('1: ' . var_export($record, true));\n                $record['name'] = $record[0];\n                $record['definition'] = $record[1];\n                $record['tags'] = $record[2];\n                $record['current_volume'] = $record[3];\n                $record['current_price_per_unit'] = $record[4];\n                $record['validation_title'] = $record[5];\n                unset($record[0], $record[1], $record[2], $record[3], $record[4], $record[5]);\n                app_log('2: ' . var_export($record, true));\n                if ($id == -1){\n                    return DataHandler::insert('invoice_lineitem_pxq', $record); \n                } else {\n                    $record['prim_uid'] = $id;\n                    DataHandler::update('invoice_lineitem_pxq', $record); \n                    return $id;\n                }              \n                break;\n            \n            case self::$arc_rrcKey:\n                $record['name'] = $record[0];\n                $record['definition'] = $record[1];\n                $record['tags'] = $record[2];\n                $record['current_volume'] = $record[3];\n                $record['current_price_per_unit'] = $record[4];\n                $record['validation_title'] = $record[5];\n                unset($record[0], $record[1], $record[2], $record[3], $record[4], $record[5]);\n                if ($id == -1){\n                    return DataHandler::insert('invoice_lineitem_arc_rrc', $record); \n                } else {\n                    $record['prim_uid'] = $id;\n                    DataHandler::update('invoice_lineitem_arc_rrc', $record); \n                    return $id;\n                }                      \n                break;\n            \n            case self::$tmKey:\n                $record['name'] = $record[0];\n                $record['role_definition'] = $record[1];\n                $record['tags'] = $record[2];\n                $record['unit'] = $record[3];\n                $record['maximum_volume'] = $record[4];\n                $record['price_per_unit'] = $record[5];\n                $record['validation_title'] = $record[6];\n                unset($record[0], $record[1], $record[2], $record[3], $record[4], $record[5], $record[6]);\n                if ($id == -1){\n                    return DataHandler::insert('invoice_lineitem_t_and_m', $record); \n                } else {\n                    $record['prim_uid'] = $id;\n                    DataHandler::update('invoice_lineitem_t_and_m', $record); \n                    return $id;\n                }                   \n                break;\n            \n            case self::$expensesKey:\n                $record['name'] = $record[0];\n                $record['definition'] = $record[1];\n                $record['tags'] = $record[2];\n                $record['maximum_amount_per_invoice'] = $record[3];\n                $record['validation_title'] = $record[4];\n                unset($record[0], $record[1], $record[2], $record[3], $record[4]);\n                if ($id == -1){\n                    return DataHandler::insert('invoice_lineitem_expenses', $record); \n                } else {\n                    $record['prim_uid'] = $id;\n                    DataHandler::update('invoice_lineitem_expenses', $record); \n                    return $id;\n                }                     \n                break;\n\n            default:\n                break;\n        } \n    }\n\n    public static function deleteLineItem($type, $record, $lineItemId) {\n        switch ($type) {\n            case self::$flatFeeKey :\n            case self::$pxqKey:\n            case self::$arc_rrcKey:\n            case self::$tmKey:\n            case self::$expensesKey:\n                $record['prim_uid'] = $lineItemId;\n                $record['deleted'] = 1;\n                DataHandler::update('invoice_lineitem_' . $type, $record);\n                break;\n\n            default:\n                app_log('Type undefined');\n                break;\n        }\n    }\n\n    public static function getAllLineItemsByITAndByType($prim_uid, $type) {\n        $sql = sprintf('SELECT * FROM invoice_lineitem_%s WHERE deleted = 0 AND template_uid = %d;', $type, $prim_uid);\n        return db_get_all($sql);\n    }\n\n    public static function copyIT($record){\n        $referenceIt = self::getPlaneInvoiceTemplate($record['itUid']);\n\n        if (isset($referenceIt['wo_uid']) || isset($record['WO'])){\n             $referenceIt['wo_uid'] = $record['WO'];\n        }\n\n        $referenceIt['approver_1'] = $_SESSION['user']['uid'];\n        $referenceIt['approver_2'] = $_SESSION['user']['uid'];\n\n        $referenceIt['po_uid'] = $record['PO'];\n        unset($referenceIt['prim_uid']);\n        $newInvoiceTemplateUid = DataHandler::insert('invoice_templates', $referenceIt);\n\n        $typeList = array(self::$flatFeeKey, self::$pxqKey, self::$arc_rrcKey, self::$tmKey, self::$expensesKey);\n        foreach ($typeList as $type){\n            self::copyLineItems($type, $record['itUid'], $newInvoiceTemplateUid);\n        }\n\n        return $newInvoiceTemplateUid;\n    }\n\n    protected static function copyLineItems($ofType, $fromInvoiceTemplate, $toInvoiceTemplate) {\n        // Load all LineItems of this Invoice Template\n        $lineItemList = self::getAllLineItemsByITAndByType($fromInvoiceTemplate, $ofType);\n\n        // copy all LineItems to target Invoice Template\n        foreach ($lineItemList as $lineItem) {\n            $oldItemUid = $lineItem['prim_uid'];\n            unset($lineItem['prim_uid']);\n            $lineItem['template_uid'] = $toInvoiceTemplate;\n            $newLineItemUid = DataHandler::insert('invoice_lineitem_' . $ofType, $lineItem);\n            self::fillCopiedLineItemWithPriceList($oldItemUid, $newLineItemUid, $ofType);\n        }\n    }\n\n    protected static function fillCopiedLineItemWithPriceList($oldItemUid, $newItemUid, $lineItemType){\n        $priceList = self::getChangesForLineItem($oldItemUid, $lineItemType);\n        foreach($priceList as $priceItem){\n            unset($priceItem['prim_uid']);\n            $priceItem['item_uid'] = $newItemUid;\n            self::setChangesForVolumePrice($priceItem);\n        }\n    }\n\n    public static function copyWO($record) {\n        $sql_wo = 'SELECT * FROM invoice_work_orders WHERE prim_uid = \"' . $record['woUid'] . '\"';\n        $refferenceWo = db_get_row($sql_wo);\n\n        $referenceWoId = $refferenceWo['prim_uid'];\n        unset($refferenceWo['prim_uid']);\n\n        $refferenceWo['approver1_uid'] = $_SESSION['user']['uid'];\n        $refferenceWo['approver2_uid'] = $_SESSION['user']['uid'];\n\n        $sql_refferenceIt = 'SELECT * FROM invoice_templates WHERE deleted = 0 AND wo_uid = \"' . $referenceWoId . '\"';\n        $refferenceItList = db_get_all($sql_refferenceIt);\n\n        $refferenceWo['po_uid'] = $record['PO'];\n        $refferenceWo['wo_start_date'] = $record['wo_start_date'];\n        $refferenceWo['wo_end_date'] = $record['wo_end_date'];\n        $wo_id = self::saveWO($refferenceWo);\n        foreach($refferenceItList as $refferenceIt){\n            $refferenceIt['WO'] = $wo_id;\n            $refferenceIt['itUid'] = $refferenceIt['prim_uid'];\n            $refferenceIt['PO'] = $record['PO'];\n            unset($refferenceIt['prim_uid']);\n            self::copyIT($refferenceIt);\n        }\n\n        return $wo_id;\n    }\n\n    public static function getChangesForLineItem($itemUid, $lineItemType, $timestamp=0) {\n        $sql = 'SELECT * FROM invoice_template_price_volume ';\n        $sql .= 'WHERE item_uid = '. $itemUid . ' ';\n        $sql .= 'AND type=\"' . $lineItemType . '\" ';\n        $sql .= 'AND deleted=0 ';\n        $sql .= 'ORDER BY date asc, prim_uid desc';\n        $priceVolumes = db_get_all($sql);\n        \n        foreach ($priceVolumes as &$priceVolume) {\n            $priceVolume['local_date'] = date_get_date(date_sys_to_local($priceVolume['date']));\n        }\n        return $priceVolumes;\n    }\n\n    public static function getActualChangeForLineItem($item, $deleted=0) {\n        $timestamp = date_time_get_time();\n        $sql = 'SELECT itpv1.* ';\n        $sql .= 'FROM invoice_template_price_volume AS itpv1 ';\n        $sql .= 'WHERE itpv1.date < ' . $timestamp . ' ';\n        $sql .= 'AND itpv1.deleted=' . $deleted . ' ';\n        $sql .= 'AND itpv1.type=\"' . $item['type'] . '\" ';\n        $sql .= 'AND itpv1.item_uid=' . $item['item_uid'] . ' ';\n        $sql .= 'ORDER by itpv1.date DESC, itpv1.prim_uid DESC';\n        return db_get_row($sql);\n    }\n    \n    public static function saveSpendPool($record){\n        $timestamp = date_time_get_time();\n        \n        if(!empty($record['sp_start_date'])){\n            $startDate = date_time_to_ts($record['sp_start_date']);\n        }else{\n            $startDate = 0;\n        }\n        if(!empty($record['sp_end_date'])){\n            $endDate = date_time_to_ts($record['sp_end_date']);\n        }else{\n            $endDate = 0;\n        }\n        \n        $sql = 'INSERT INTO invoice_spend_pool_definition (spend_pool_name, description, sp_start_date, sp_end_date, currency_hours, ';\n        $sql .= 'currency, amount, provider_uid, contract_uid, created) ';\n        $sql .= 'VALUES (\"'.$record['spend_pool_name'].'\", \"'.$record['description'].'\", '.$startDate.', ';\n        $sql .= $endDate.', \"'.$record['currency_hours'].'\", \"'.$record['currency'].'\", \"'.$record['amount']. '\", ';\n        $sql .= '\"'.$record['provider_uid'].'\", \"'.$record['contract_uid'].'\", '.$timestamp.')';\n        \n        db_execute($sql);\n    }\n    \n    public static function updateSpendPool($record){\n        if(!empty($record['sp_start_date'])){\n            $startDate = date_time_to_ts($record['sp_start_date']);\n        }else{\n            $startDate = 0;\n        }\n        if(!empty($record['sp_end_date'])){\n            $endDate = date_time_to_ts($record['sp_end_date']);\n        }else{\n            $endDate = 0;\n        }\n        \n        $sql = 'UPDATE invoice_spend_pool_definition SET spend_pool_name = \"'.$record['spend_pool_name'].'\", ';\n        $sql .= 'description = \"'.$record['description'].'\", sp_start_date = '.$startDate.', ';\n        $sql .= 'sp_end_date = '.$endDate.', currency_hours = \"'.$record['currency_hours'].'\", currency = \"'.$record['currency'].'\", amount = \"'.$record['amount'].'\", ';\n        $sql .= 'provider_uid = \"'.$record['provider_uid'].'\", contract_uid = \"'.$record['contract_uid'].'\" ';\n        $sql .= 'WHERE prim_uid = '.$record['prim_uid'];\n        \n        db_execute($sql);\n    }\n\n    public static function getSpendPool($spendId){\n        $sql = 'SELECT * FROM invoice_spend_pool_definition WHERE deleted = 0 AND prim_uid = '.$spendId;\n        return db_get_row($sql);\n    }\n\n    public static function getContractCurrencyCode($contractId){\n        $sql = 'SELECT cc.code';\n        $sql .= ' FROM contracts c, core_currencies cc';\n        $sql .= ' WHERE c.prim_uid = ' . $contractId;\n        $sql .= ' AND c.currency = cc.prim_uid AND c.deleted = 0 AND cc.deleted = 0';\n        return db_get_one($sql);\n    }\n\n    public static function deleteSpend($spendId){\n        $sql = 'UPDATE invoice_spend_pool_definition SET deleted = 1 WHERE prim_uid = '.$spendId;\n        db_execute($sql);\n    }\n\n    public static function getAllSpendPools(){\n        $sql = 'SELECT * FROM invoice_spend_pool_definition WHERE deleted = 0';\n        return db_get_all($sql);\n    }\n    \n    public static function getAllCurrenciesCode(){\n        $sql = 'SELECT * FROM core_currencies WHERE deleted = 0 AND hidden = 0';\n        return db_get_all($sql);\n    }\n    \n    // Für all providers werden nur algemeine Spend Pools angezeiget. \n    // Für den bestimmten Provider werden seinen und algemeine Pools angezeigt.\n    public static function getAllSpendPoolsFiltered($providerId, $contractId){\n//        app_log('prov: '.$providerId.'; contr: '.$contractId);\n        \n        // All | All  -> alle Spend Pools\n        $sql = 'SELECT * FROM invoice_spend_pool_definition WHERE deleted = 0';\n        \n        // Provider | All  -> nur Provider spezifisch \n        if((isset($providerId) && $providerId > 0) && (!isset($contractId) || $contractId == 0)){\n            $sql .= ' AND provider_uid = '.$providerId;\n        }\n        // Provider | Contract  -> nur Contract spezifisch\n        if((isset($providerId) && $providerId > 0) && (isset($contractId) && $contractId > 0)){\n            $sql .= ' AND provider_uid = '. $providerId .' AND contract_uid = '.$contractId;\n        }\n        $sql .= ' ORDER BY contract_uid ASC';\n        \n        return db_get_all($sql);\n    }\n    \n    public static function getAllValidationRulesFiltered($providerId, $contractId) {\n//        app_log('prov: '.$providerId.'; contr: '.$contractId);\n\n        // All | All  -> nur alle allgemeine Validation Rules\n        $sql = 'SELECT * FROM invoice_validation_rules WHERE deleted = 0 AND provider_uid = 0';\n        \n        // Provider | All  -> allgemeine + Provider spezifisch \n        if((isset($providerId) && $providerId > 0) && (!isset($contractId) || $contractId == 0)){\n            $sql .= ' OR provider_uid = '.$providerId;\n        }\n        // Provider | Contract  -> allgemeine + Provider spezifisch + Contract spezifisch\n        if((isset($providerId) && $providerId > 0) && (isset($contractId) && $contractId > 0)){\n            $sql .= ' OR (provider_uid = '.$providerId.' AND contract_uid = 0)';\n            $sql .= ' OR (provider_uid = '. $providerId .' AND contract_uid = '.$contractId.')';\n        }\n        $sql .= ' ORDER BY contract_uid ASC';\n        \n        return db_get_all($sql);\n    }\n    \n    public static function getValidationRule($ruleId){\n        $sql = 'SELECT * FROM invoice_validation_rules WHERE deleted = 0 AND prim_uid = '.$ruleId;\n        return db_get_row($sql);\n    }\n    \n    public static function getAllValidationRules(){\n        $sql = 'SELECT * FROM invoice_validation_rules WHERE deleted = 0';\n        return db_get_all($sql);\n    }\n    \n    public static function saveValidationRule($record) {\n        $timestamp = date_time_get_time();\n        \n        $sql = 'INSERT INTO invoice_validation_rules (rule_name, requirement, reference, ';\n        $sql .= 'provider_uid, contract_uid, created) ';\n        $sql .= 'VALUES (\"'.$record['rule_name'].'\", \"'.$record['requirement'].'\", \"'.$record['reference'].'\", ';\n        $sql .= '\"'.$record['provider_uid'].'\", \"'.$record['contract_uid'].'\", '.$timestamp.')';\n        \n        db_execute($sql);\n    }\n    \n    public static function updateValidationRule($record){\n        $sql = 'UPDATE invoice_validation_rules SET rule_name = \"'.$record['rule_name'].'\", requirement = \"'.$record['requirement'].'\", ';\n        $sql .= 'reference = \"'.$record['reference'].'\", provider_uid = \"'.$record['provider_uid'].'\", contract_uid = \"'.$record['contract_uid'].'\" ';\n        $sql .= 'WHERE prim_uid = '.$record['prim_uid'];\n        db_execute($sql);\n    }\n    \n    public static function deleteRule($ruleId){\n        $sql = 'UPDATE invoice_validation_rules SET deleted = 1 WHERE prim_uid = '.$ruleId;\n        db_execute($sql);\n    }\n    \n    /*\n     * Get Workflow per provider id and Contract id\n     * \n     * @param   $providerId     int     provider id\n     * @param   $contractId     int     contract id\n     * @param   $type           int     workflow type, 1 - original, 0 - draft\n     * @return                  Array   with DB Entrys or NULL\n     */\n    public static function getWorkflow($providerId, $contractId, $type){\n//        app_log('prov: '.$providerId.'; contr: '.$contractId);\n        $entryId = self::getWorkflowId($providerId, $contractId);\n        if($entryId !== NULL){\n            $sql = 'SELECT * FROM invoice_workflow_values WHERE deleted = 0 AND workflow_uid = '.$entryId.' AND original = '.$type;\n            return db_get_all($sql);\n        }\n        return;\n    }\n    \n    public static function saveWorkflow($record) {\n        $entryId = self::getWorkflowId($record['provider_uid'], $record['contract_uid']);\n        if ($entryId === NULL) {\n            $sql = 'INSERT INTO invoice_workflow_settings (provider_uid, contract_uid) ';\n            $sql .= 'VALUES (' . $record['provider_uid'] . ', ' . $record['contract_uid'] . ')';\n            db_execute($sql);\n            \n            $newEntryId = self::getWorkflowId($record['provider_uid'], $record['contract_uid']);\n            self::makeWorkflowInsert($newEntryId, $record['original'], 1, 5);       // workflow id, array, 1 => original, 5 steps\n            self::makeWorkflowInsert($newEntryId, $record['draft'], 0, 3);          // workflow id, array, 0 => draft, 3 steps\n            \n        } else {\n            self::updateWorkflow($record);\n        }\n    }\n\n    public static function updateWorkflow($record){\n        $workflowId = self::getWorkflowId($record['provider_uid'], $record['contract_uid']);\n        self::makeWorkflowUpdate($workflowId, $record['original'], 1, 5);\n        self::makeWorkflowUpdate($workflowId, $record['draft'], 0, 3);\n    }\n    \n    /*\n     * Get workflow id per provider id and Contract id\n     * \n     * @param   $providerId     int     provider id\n     * @param   $contractId     int     contract id\n     * @return                  int     workflow id\n     */\n    private static function getWorkflowId($providerId, $contractId){\n        $sql = 'SELECT prim_uid FROM invoice_workflow_settings WHERE deleted = 0 AND ';\n        $sql .= 'provider_uid = '.$providerId.' AND contract_uid = '.$contractId;\n        return db_get_one($sql);\n    }\n    \n    private static function makeWorkflowInsert($workflowId, $workflow, $stepsType, $steps) {\n        if($stepsType == 1){        // original workflow\n            $workflowKey = 'workflow_';\n            $approversKey = 'approversSelector_';\n            $daysKey = 'daysFor_';\n        }else{                      // draft workflow\n            $workflowKey = 'draftWorkflow_';\n            $approversKey = 'draftApproversSelector_';\n            $daysKey = 'draftDaysFor_';\n        }\n        for ($i = 1; $i <= $steps; $i++) {\n            if (!empty($workflow[$workflowKey . $i])) {\n                $sql = 'INSERT INTO invoice_workflow_values (workflow_uid, original, invoice_workflow, invoice_approvers, days) ';\n                $sql .= 'VALUES ('.$workflowId.', '.$stepsType.', \"'.$workflow[$workflowKey . $i].'\", ';\n                $sql .= '\"'.$workflow[$approversKey . $i].'\", '.$workflow[$daysKey . $i].')';\n//                app_log('sql: ' . $sql);\n                db_execute($sql);\n            }\n        }\n    }\n    \n    private static function makeWorkflowUpdate($workflowId, $workflow, $stepsType, $steps) {\n        if($stepsType == 1){        // original workflow\n            $primKey = 'primuid_';\n            $workflowKey = 'workflow_';\n            $approversKey = 'approversSelector_';\n            $daysKey = 'daysFor_';\n        }else{                      // draft workflow\n            $primKey = 'draftPrimuid_';\n            $workflowKey = 'draftWorkflow_';\n            $approversKey = 'draftApproversSelector_';\n            $daysKey = 'draftDaysFor_';\n        }\n        for ($i = 1; $i <= $steps; $i++) {\n            if (!empty($workflow[$primKey . $i]) && !empty($workflow[$workflowKey . $i])) {     // workflow hat prim_uid => update\n                $sql = 'UPDATE invoice_workflow_values SET invoice_workflow = \"'.$workflow[$workflowKey . $i].'\", ';\n                $sql .= 'invoice_approvers = \"'.$workflow[$approversKey . $i].'\", days = '.$workflow[$daysKey . $i];\n                $sql .= ' WHERE prim_uid = '.$workflow[$primKey . $i];\n//                app_log('sql: ' . $sql);\n                db_execute($sql);\n            }else if(!empty($workflow[$primKey . $i]) && empty($workflow[$workflowKey . $i])){  // es gibt prim_uid, aber kein workflow => delete\n                $sql = 'UPDATE invoice_workflow_values SET deleted = 1 WHERE prim_uid = '.$workflow[$primKey . $i];\n//                app_log('sql: ' . $sql);\n                db_execute($sql);\n            }else if(empty($workflow[$primKey . $i]) && !empty($workflow[$workflowKey . $i])){  // workflow hat kein prim_uid => insert new\n                $sql = 'INSERT INTO invoice_workflow_values (workflow_uid, original, invoice_workflow, invoice_approvers, days) ';\n                $sql .= 'VALUES ('.$workflowId.', '.$stepsType.', \"'.$workflow[$workflowKey . $i].'\", ';\n                $sql .= '\"'.$workflow[$approversKey . $i].'\", '.$workflow[$daysKey . $i].')';\n//                app_log('sql: ' . $sql);\n                db_execute($sql);\n            }\n        }\n    }\n\n    public static function getAllGroupUsers($groupName) {\n        $sql = 'SELECT cau.prim_uid\n                FROM core_auth_users cau\n                LEFT JOIN core_auth_users_groups caug ON (cau.prim_uid = caug.user_uid)\n                LEFT JOIN core_auth_groups cag ON (cag.prim_uid = caug.group_uid)\n                WHERE cag.group_key = \"' . $groupName .'\" AND  cag.deleted = 0 AND cau.deleted = 0';\n        return db_get_all($sql);\n    }\n\n    public static function getUserNameById($id) {\n        $sql = \"SELECT CONCAT_WS(' ', first_name, last_name) FROM core_auth_users WHERE prim_uid = \" . $id;\n        $name = db_get_one($sql);\n        return $name;\n    }\n\n    public static function setChangesForVolumePrice($item) {\n        $sql = \"UPDATE invoice_template_price_volume as itpv SET itpv.deleted=1\".\n               \" WHERE itpv.type='\".$item['type'].\"'\".\n               \" AND itpv.item_uid=\".$item['item_uid'].\n               \" AND itpv.date=\" . $item['date'];\n        db_execute($sql);\n\n        if($item['type'] == self::$flatFeeKey || $item['type'] == self::$expensesKey) {\n            $item['volume'] = null;\n        } \n\n        if($item['type'] != self::$tmKey) {\n            $item['unit'] = null;\n            $item['definition'] = null;\n        }\n        DataHandler::insert('invoice_template_price_volume', $item);\n    }\n\n    public static function deleteChange($changeId) {\n        $sql = \"UPDATE invoice_template_price_volume as itpv SET itpv.deleted=1 WHERE itpv.prim_uid=\" . $changeId;\n        db_execute($sql);\n        $sql = \"SELECT * FROM invoice_template_price_volume \";\n        $sql .= \"WHERE prim_uid=\" . $changeId;\n        $change = db_get_row($sql);\n        return self::getActualChangeForLineItem($change);\n    }\n\n    public static function saveValidationType($lineItemId, $lineItemType, $validation, $title, $type) {\n        switch ($lineItemType) {\n        case self::$flatFeeKey :\n        case self::$pxqKey:\n        case self::$arc_rrcKey:\n        case self::$tmKey:\n        case self::$expensesKey:\n            $record['prim_uid'] = $lineItemId;\n            $record['validation_uid'] = $validation;\n            $record['validation_title'] = $title;\n            $record['validation_type_uid'] = $type;\n            return DataHandler::update('invoice_lineitem_' . $lineItemType, $record);     \n            break;\n        default:\n        app_log('undefined type');\n        break;\n        }\n    }\n\n    public static function getBaseLineValuesForId($item_uid, $deleted = 0) {\n        $sql = 'SELECT * FROM invoice_lineitem_arc_rrc_baselines WHERE item_uid ='.$item_uid.' AND deleted ='.$deleted;\n        return db_get_row($sql);\n    }\n\n    public static function saveBaseline($record) {\n        return DataHandler::insert('invoice_lineitem_arc_rrc_baselines', $record);\n    }\n\n    public static function getAllVDBackupDataTypes(){\n        $sql = \"SELECT tbl1.*, tbl2.title, tbl3.name FROM invoice_vd_backup_data_types tbl1 LEFT JOIN contracts tbl2 ON tbl1.contract_id = tbl2.prim_uid LEFT JOIN core_companies tbl3 ON tbl1.provider_id = tbl3.prim_uid WHERE tbl1.deleted = 0\";\n        return db_get_all($sql);        \n    }\n\n    public static function saveVDBDT($record){\n        \n        switch ($record['type']){\n            case 1:\n                $record['type'] = 'Excel';\n                break;\n            case 2:\n                $record['type'] = 'Text';\n                break;\n            default:\n                $record['type'] = 'not valid value';\n        }\n\n        switch ($record['upload_frequency']){\n            case 1:\n                $record['upload_frequency'] = 'Daily';\n                break;\n            case 2:\n                $record['upload_frequency'] = 'Weekly';\n                break;\n            case 3:\n                $record['upload_frequency'] = 'Monthly';\n                break;\n            case 4:\n                $record['upload_frequency'] = 'Quartely';\n                break;\n            case 5:\n                $record['upload_frequency'] = 'Bi-Yearly';\n                break;\n            case 6:\n                $record['upload_frequency'] = 'Yearly';\n                break;    \n            default:\n                $record['upload_frequency'] = 'not valid value';\n        }\n\n        if (isset($record['prim_uid'])) {\n            return DataHandler::update('invoice_vd_backup_data_types', $record);\n        } else {\n            return DataHandler::insert('invoice_vd_backup_data_types', $record);\n        }\n\n        return false;\n    }\n\n    public static function deleteVDBDT($prim_uid) {\n        $sql = 'UPDATE invoice_vd_backup_data_types SET deleted=\"1\" WHERE prim_uid='.$prim_uid;\n        return db_execute($sql);\n    }\n\n    public static function getVDBDT($prim_uid) {\n        $sql = 'SELECT * FROM invoice_vd_backup_data_types WHERE prim_uid = '. $prim_uid;\n\n        $result = db_get_row($sql);\n\n        $sql = 'SELECT title FROM contracts WHERE prim_uid='.$result['contract_id'];\n        $contract = db_get_row($sql);\n        $result['contract_title'] = $contract['title'];\n\n        $sql = 'SELECT name FROM core_companies WHERE prim_uid='.$result['provider_id'];\n        $provider = db_get_row($sql);\n        $result['provider_name'] = $provider['name'];\n\n        switch ($result['type']){\n            case 'Excel':\n                $result['type'] = 1;\n                break;\n            case 'Text':\n                $result['type'] = 2;\n                break;\n            default:\n                $result['type'] = 0;\n        }\n\n        switch ($result['upload_frequency']){\n            case 'Daily':\n                $result['upload_frequency'] = 1;\n                break;\n            case 'Weekly':\n                $result['upload_frequency'] = 2;\n                break;\n            case 'Monthly':\n                $result['upload_frequency'] = 3;\n                break;\n            case 'Quartely':\n                $result['upload_frequency'] = 4;\n                break;\n            case 'Bi-Yearly':\n                $result['upload_frequency'] = 5;\n                break;\n            case 'Yearly':\n                $result['upload_frequency'] = 6;\n                break;    \n            default:\n                $result['upload_frequency'] = 0;\n        }\n\n        return $result;\n    }\n\n    public static function getAllRateCards(){\n        $sql = \"SELECT tbl1.*, tbl2.title, tbl3.name FROM invoice_rate_cards tbl1 LEFT JOIN contracts tbl2 ON tbl1.contract_id = tbl2.prim_uid LEFT JOIN core_companies tbl3 ON tbl1.provider_id = tbl3.prim_uid WHERE tbl1.deleted = 0\";\n        return db_get_all($sql);        \n    }\n    \n    public static function getCurrenciesFromRegionList($contractId){\n        $sql = 'SELECT DISTINCT cc.* FROM core_currencies cc ';\n        $sql .= 'LEFT JOIN invoice_invoice_region_definition ird ON cc.code = ird.currency ';\n        $sql .= 'WHERE ird.deleted = 0 AND ird.currency IS NOT NULL AND ird.contract_id = '.$contractId;\n        return db_get_all($sql);\n    }\n\n    public static function saveRateCard($record){\n\n        switch ($record['unit']){\n            case 1:\n                $record['unit'] = 'Hour';\n                break;\n            case 2:\n                $record['unit'] = 'Day';\n                break;\n            case 3:\n                $record['unit'] = 'Week';\n                break;\n            case 4:\n                $record['unit'] = 'Month';\n                break;\n            default:\n                $record['unit'] = 'not valid value';\n        }\n\n        if (isset($record['prim_uid'])) {\n            return DataHandler::update('invoice_rate_cards', $record);\n        } else {\n            return DataHandler::insert('invoice_rate_cards', $record);\n        }\n\n        return false;\n    }\n\n    public static function deleteRateCard($prim_uid) {\n        $sql = 'UPDATE invoice_rate_cards SET deleted=\"1\" WHERE prim_uid='.$prim_uid;\n        return db_execute($sql);\n    }\n\n    public static function getRateCard($prim_uid) {\n        $sql = 'SELECT * FROM invoice_rate_cards WHERE prim_uid = '. $prim_uid;\n\n        $result = db_get_row($sql);\n\n        switch ($result['unit']){\n            case 'Hour':\n                $result['unit'] = 1;\n                break;\n            case 'Day':\n                $result['unit'] = 2;\n                break;\n            case 'Week':\n                $result['unit'] = 3;\n                break;\n            case 'Month':\n                $result['unit'] = 4;\n                break;\n            default:\n                $result['unit'] = 0;\n        }\n\n        $sql = 'SELECT title FROM contracts WHERE prim_uid='.$result['contract_id'];\n        $contract = db_get_row($sql);\n        $result['contract_title'] = $contract['title'];\n\n        $sql = 'SELECT name FROM core_companies WHERE prim_uid='.$result['provider_id'];\n        $provider = db_get_row($sql);\n        $result['provider_name'] = $provider['name'];\n\n        $result_currency = self::getCurrencyList($result['provider_id'], $result['contract_id']);\n\n        $result[] = $result_currency;\n        return $result;\n    }\n\n    public static function getAllRegionDefinitions(){\n\n        $sql = \"SELECT tbl1.*, tbl2.title, tbl3.name FROM invoice_invoice_region_definition tbl1 LEFT JOIN contracts tbl2 ON tbl1.contract_id = tbl2.prim_uid LEFT JOIN core_companies tbl3 ON tbl1.provider_id = tbl3.prim_uid WHERE tbl1.deleted = 0\";\n\n        $results = db_get_all($sql);\n        foreach ($results as $key => $value) {\n            $results[$key]['c_r_v_start_date'] = date('m/d/Y', $results[$key]['c_r_v_start_date']);\n            $results[$key]['c_r_v_end_date'] = date('m/d/Y', $results[$key]['c_r_v_end_date']);\n        }\n\n        return $results;        \n    }\n    \n    public static function getAllRegionDefinitionsFiltered($providerId, $contractId){\n//        app_log('prov: '.$providerId.'; contr: '.$contractId);\n        \n        // All | All  -> alle Regions\n        $sql = 'SELECT tbl1.*, tbl2.title, tbl3.name FROM invoice_invoice_region_definition tbl1 LEFT JOIN contracts tbl2 ON tbl1.contract_id = tbl2.prim_uid LEFT JOIN core_companies tbl3 ON tbl1.provider_id = tbl3.prim_uid WHERE tbl1.deleted = 0';\n        \n        // Provider | All  -> nur Provider spezifisch \n        if((isset($providerId) && $providerId > 0) && (!isset($contractId) || $contractId == 0)){\n            $sql .= ' AND provider_id = '.$providerId;\n        }\n        // Provider | Contract  -> nur Contract spezifisch\n        if((isset($providerId) && $providerId > 0) && (isset($contractId) && $contractId > 0)){\n            $sql .= ' AND provider_id = '. $providerId .' AND contract_id = '.$contractId;\n        }\n        $sql .= ' ORDER BY contract_id ASC';\n\n        $results = db_get_all($sql);\n        foreach ($results as $key => $value) {\n            $results[$key]['c_r_v_start_date'] = date('m/d/Y', $results[$key]['c_r_v_start_date']);\n            $results[$key]['c_r_v_end_date'] = date('m/d/Y', $results[$key]['c_r_v_end_date']);\n        }\n\n        return $results;        \n    }\n\n    public static function saveRegionDefinition($record){\n        \n        $record['c_r_v_start_date'] = strtotime($record['c_r_v_start_date']);\n        $record['c_r_v_end_date'] = strtotime($record['c_r_v_end_date']);\n\n        if (isset($record['prim_uid'])) {\n            return DataHandler::update('invoice_invoice_region_definition', $record);\n        } else {\n            return DataHandler::insert('invoice_invoice_region_definition', $record);\n        }\n\n        return false;\n    }\n\n    public static function deleteRegionDefinition($prim_uid) {\n        $sql = 'UPDATE invoice_invoice_region_definition SET deleted=\"1\" WHERE prim_uid='.$prim_uid;\n        return db_execute($sql);\n    }\n\n    public static function getRegionDefinition($prim_uid) {\n        $sql = 'SELECT * FROM invoice_invoice_region_definition WHERE prim_uid = '. $prim_uid;\n\n        $result = db_get_row($sql);\n\n        $result['c_r_v_start_date'] = date('m/d/Y', $result['c_r_v_start_date']);\n        $result['c_r_v_end_date'] = date('m/d/Y', $result['c_r_v_end_date']);\n\n        $sql = 'SELECT title FROM contracts WHERE prim_uid='.$result['contract_id'];\n        $contract = db_get_row($sql);\n        $result['contract_title'] = $contract['title'];\n\n        $sql = 'SELECT name FROM core_companies WHERE prim_uid='.$result['provider_id'];\n        $provider = db_get_row($sql);\n        $result['provider_name'] = $provider['name'];\n\n        return $result;\n    }\n\n    public static function getCurrencyList($provider_id, $contract_id){\n        $sql = 'SELECT DISTINCT currency FROM invoice_invoice_region_definition WHERE deleted = 0 AND provider_id ='.$provider_id. ' AND contract_id ='. $contract_id;\n        $result = db_get_all($sql);\n        return $result;\n    }\n\n    public static function getContractById($contractId) {\n        $dates = db_get_row('SELECT * FROM contracts WHERE prim_uid=' . $contractId);\n        $dates['start_date_format'] = date_get_date(date_sys_to_local($dates['start_date']));\n        $dates['end_date_format'] = date_get_date(date_sys_to_local($dates['end_date']));\n        return $dates;\n    }\n\n    public static function getProviderById($providerId) {\n        return db_get_row('SELECT * FROM core_companies WHERE prim_uid=' . $providerId);\n    }\n\n    public static function getStartEndWOsForPOId($poId) {\n        $dates = db_get_row('SELECT MIN(wo_start_date) AS min_start_date, MAX(wo_start_date) AS max_start_date, MIN(wo_end_date) AS min_end_date, MAX(wo_end_date) AS max_end_date FROM invoice_work_orders WHERE po_uid = ' . $poId . ' AND deleted = 0');\n        $dates['min_start_date_format'] = date_get_date(date_sys_to_local($dates['min_start_date']));\n        $dates['max_start_date_format'] = date_get_date(date_sys_to_local($dates['max_start_date']));\n        $dates['min_end_date_format'] = date_get_date(date_sys_to_local($dates['min_end_date']));\n        $dates['max_end_date_format'] = date_get_date(date_sys_to_local($dates['max_end_date']));\n        return $dates;\n    }\n\n    public static function getBaselineForLineitem($lineItemId) {\n        return db_get_row('SELECT * FROM invoice_lineitem_arc_rrc_baselines WHERE deleted = 0 AND item_uid = '.$lineItemId);\n    }\n\n    public static function getVolumeBandForLineitem($lineItemId) {\n        return db_get_all('SELECT * FROM invoice_lineitem_arc_rrc_bands WHERE deleted = 0 AND item_uid = '.$lineItemId);\n    }\n\n    public static function saveVolumeBandForLineitem($lineItemId, $name, $value) {\n        $record['item_uid'] = $lineItemId;\n        $record['name'] = $name;\n        $record['value'] = $value;\n        return DataHandler::insert('invoice_lineitem_arc_rrc_bands', $record);\n    }\n}\n",
					"file": "/home/julian/git/open3-dev/src/modules/invoice_management/includes/DataInvoiceManagement.inc.php",
					"file_size": 53385,
					"file_write_time": 130921661263312189,
					"settings":
					{
						"buffer_size": 51695,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/app/logs/app.log",
					"settings":
					{
						"buffer_size": 1,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/app/logs/php-errors.log",
					"settings":
					{
						"buffer_size": 1,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/src/modules/invoice_management/gui/html/invoice_framework.php",
					"settings":
					{
						"buffer_size": 118203,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/res/migrations/file 20150203.php",
					"settings":
					{
						"buffer_size": 33081,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/gui/js/plugins/gridsterCharts/gridsterCharts.js",
					"settings":
					{
						"buffer_size": 58691,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/gui/js/actions/custom_dashboard.js",
					"settings":
					{
						"buffer_size": 71811,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/julian/git/open3-dev/gui/js/utils/worker/chartsRemoteWorker.js",
					"settings":
					{
						"buffer_size": 73807,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": ":w",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						":inc",
						"Emmet: Increment Number by 1"
					],
					[
						":",
						":w - Save"
					],
					[
						":r",
						":e - Revert"
					],
					[
						":d",
						"Emmet: Decrement Number by 1"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						":we",
						":w - Save"
					],
					[
						":js",
						"Set Syntax: JavaScript"
					],
					[
						":q",
						"Set Syntax: SQL"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"remov",
						"Package Control: Remove Package"
					],
					[
						"packa",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/julian/git/open3-dev",
				"/home/julian/git/open3-dev/install/actions",
				"/home/julian/git/open3-dev/res/migrations",
				"/home/julian/git/open3-dev/src",
				"/home/julian/git/open3-dev/src/includes"
			],
			"file_history":
			[
				"/home/julian/git/open3-dev/src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/invoice_management/invoice_management.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/lib/PhpParser/Autoloader.php",
				"/home/julian/git/open3-dev/install/actions/migrate_db.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/adodb-errorhandler.inc.php",
				"/home/julian/git/open3-dev/install/index.php",
				"/home/julian/git/open3-dev/install/gui/js/maintenance_options.js",
				"/home/julian/git/open3-dev/install/maintenance.php",
				"/home/julian/git/open3-dev/app/logs/app.log",
				"/home/julian/git/open3-dev/app/logs/maintenance.log",
				"/home/julian/git/open3-dev/app/logs/php-errors.log",
				"/home/julian/git/open3-dev/src/includes/classes/class.application.php",
				"/home/julian/git/open3-dev/src/includes/libs/log4php/appenders/LoggerAppenderFile.php",
				"/home/julian/git/open3-dev/src/includes/libs/log4php/LoggerLayout.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/session/adodb-session2.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151113.php",
				"/home/julian/git/open3-dev/src/modules/invoice_management/includes/DataInvoiceManagement.inc.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151116.php",
				"/home/julian/git/open3-dev/gui/js/app.js",
				"/home/julian/git/open3-dev/gui/js/utils/templating.js",
				"/home/julian/git/open3-dev/src/modules/invoice_management/gui/html/invoice_framework.php",
				"/home/julian/git/open3-dev/gui/js/actions/invoice_framework.js",
				"/home/julian/git/open3-dev/src/modules/invoice_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/gui/themes/default/default.php",
				"/home/julian/git/open3-dev/gui/js/plugins/dashboarding/dashboarding.js",
				"/home/julian/git/open3-dev/gui/js/plugins/gridsterCharts/gridsterCharts.js",
				"/home/julian/tmp/prog1lib/lib/base.h",
				"/home/julian/Downloads/volume.c",
				"/home/julian/git/open3-dev/res/SQL/access.ini",
				"/home/julian/git/open3-dev/res/migrations/file 20151102.php",
				"/home/julian/git/open3-dev/install/functions.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/includes/DataGovernance.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/governance.inc.php",
				"/home/julian/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/julian/git/grdr/src/game/guenther.js",
				"/home/julian/git/open3-dev/gui/js/test.js",
				"/home/julian/git/open3-dev/configs/config.inc.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/includes/helpers/document_editor_utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/gui/html/document_editor.php",
				"/home/julian/git/open3-dev/src/modules/document_editor/document_editor.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/performance_management.inc.php",
				"/home/julian/git/open3-dev/src/includes/classes/class.module.php",
				"/home/julian/git/open3-dev/index.php",
				"/home/julian/git/open3-dev/src/modules/ccr/includes/DataCCR.inc.php",
				"/home/julian/.config/sublime-text-3/Packages/User/Xdebug.sublime-settings",
				"/home/julian/git/open3-dev/src/includes/classes/class.view.php",
				"/home/julian/git/open3-dev/src/includes/network.inc.php",
				"/home/julian/git/open3-dev/src/includes/security.inc.php",
				"/home/julian/git/open3-dev/src/includes/database.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/adodb.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/drivers/adodb-mysql.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/gui/js/actions/boards.js",
				"/home/julian/git/open3-dev/src/modules/governance/config.xml",
				"/home/julian/git/open3-dev/src/modules/governance/i18/en_us.xml",
				"/home/julian/uni/hlr/uni-mod-hlr/aufgabenblatt_03/BuengenerDeinertGawehn/pde/partdiff-seq.c",
				"/home/julian/git/open3-dev/src/modules/invoice_management/gui/js/actions/invoice_framework.js",
				"/home/julian/.config/sublime-text-3/Packages/Xdebug Client/Xdebug.sublime-settings",
				"/home/julian/git/open3-dev/src/modules/repository/includes/class.io_engine.inc.php",
				"/home/julian/git/open3-dev/src/includes/utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/core/extensions/class.remote_service.php",
				"/home/julian/git/open3-dev/src/modules/repository/repository.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/includes/helpers/repos_versions.inc.php",
				"/srv/http/izariam/views/view/researchAdvisor.php",
				"/srv/http/izariam/views/view/shipyard.php",
				"/srv/http/izariam/models/update_model.php",
				"/srv/http/izariam/views/view/premiumDetails.php",
				"/srv/http/izariam/views/view/premium.php",
				"/home/julian/git/open3-dev/src/modules/meetings/includes/DataMeetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/user_management/includes/DataUserManagement.inc.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151014.php",
				"/home/julian/git/open3-dev/Makefile",
				"/home/julian/git/open3-dev/.gitignore",
				"/home/julian/git/open3-dev/gui/js/actions/design_overview.js",
				"/home/julian/git/open3-dev/src/modules/meetings/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/core/core.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/contract_management/includes/DataContractManagement.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/design_overview.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/includes/DataDesignOverview.inc.php",
				"/home/julian/git/open3-dev/src/modules/design_overview/gui/html/contract_management_start.php",
				"/home/julian/git/open3-dev/gui/js/actions/custom_dashboard.js",
				"/home/julian/git/open3-dev/gui/js/actions/performance_dashboard.js",
				"/home/julian/git/open3-dev/gui/js/actions/contract_management_start.js",
				"/home/julian/git/open3-dev/src/modules/design_overview/extensions/remote_service/rs_custom_ibm/class.rs_custom_ibm.inc.php",
				"/home/julian/git/open3-dev/src/modules/contract_management/contract_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/contract_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/contract_changes/i18/en_us.xml",
				"/home/julian/git/open3-dev/gui/js/actions/edit_sla.js",
				"/home/julian/git/open3-dev/src/modules/meetings/meetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/new_sla.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/edit_sla.php",
				"/home/julian/git/open3-dev/src/includes/i18.inc.php",
				"/home/julian/git/open3-dev/src/modules/repository/includes/helpers/repos_permission_utils.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/sla_validation.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/approve_sla.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/single_report.php",
				"/home/julian/git/open3-dev/gui/js/actions/single_report.js",
				"/home/julian/git/open3-dev/src/modules/performance_management/i18/en_us.xml",
				"/home/julian/git/open3-dev/src/modules/governance/gui/html/edit_board.php",
				"/home/julian/git/open3-dev/gui/js/actions/new_sla.js",
				"/home/julian/git/open3-dev/src/modules/relationship_matrix/includes/helpers/DataHandler.php",
				"/home/julian/git/open3-dev/src/modules/multi_supplier/includes/DataMultiSupplier.inc.php",
				"/home/julian/git/open3-dev/src/includes/logging_engine.inc.php",
				"/home/julian/git/open3-dev/app/caches/system_settings.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/includes/DataPerformanceManagement.inc.php",
				"/home/julian/git/open3-dev/src/modules/performance_management/gui/html/sla_manager.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151016.php",
				"/home/julian/git/open3-dev/src/modules/core/includes/DataCore.inc.php",
				"/home/julian/git/open3-dev/src/includes/libs/phpexcel/PHPExcel/Shared/String.php",
				"/home/julian/git/open3-dev/src/includes/libs/adodb5/pear/Auth/Container/ADOdb.php",
				"/home/julian/git/open3-dev/src/modules/user_management/extensions/remote_service/rs_user_management/class.rs_user_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/meetings/extensions/remote_service/rs_meetings/class.rs_meetings.inc.php",
				"/home/julian/git/open3-dev/src/modules/governance/extensions/remote_service/rs_governance/class.rs_governance.inc.php",
				"/home/julian/git/open3-dev/cron.php",
				"/home/julian/git/open3-dev/src/modules/meetings/config.xml",
				"/home/julian/git/open3-dev/src/modules/meetings/extensions/cron/cron_meeting_recorder/class.cron_meeting_recorder.inc.php",
				"/home/julian/git/open3-dev/src/modules/meetings/gui/html/meeting_recorder.php",
				"/home/julian/git/open3-dev/gui/js/actions/meeting_recorder.js",
				"/home/julian/git/open3-dev/src/modules/performance_management/extensions/remote_service/rs_performance_management/class.rs_performance_management.inc.php",
				"/home/julian/git/open3-dev/src/modules/core/data/nein.txt",
				"/home/julian/git/open3-dev/src/modules/meetings/i18/de_de.xml",
				"/home/julian/git/open3-dev/src/modules/governance/gui/html/boards.php",
				"/home/julian/git/open3-dev/res/migrations/file 20151012.php",
				"/home/julian/git/open3-dev/src/modules/aidre_logs/includes/helpers/Actions.php",
				"/home/julian/git/open3-dev/gui/js/actions/meeting_calendar.js",
				"/home/julian/git/open3-dev/gui/metronic/global/plugins/font-awesome/fonts/fontawesome-webfont.woff2",
				"/home/julian/git/open3-dev/gui/js/plugins/annotator_viewer/annotator.custom_viewer.js"
			],
			"find":
			{
				"height": 34.0
			},
			"find_in_files":
			{
				"height": 90.0,
				"where_history":
				[
					"/home/julian/git/open3-dev/res/migrations/",
					"/home/julian/git/open3-dev/res.migrations/",
					"/home/julian/git/open3-dev/",
					"/home/julian/git/open3-dev/res/migrations",
					"",
					"/home/julian/git/open3-dev/",
					"open3-dev/",
					"",
					"*.js",
					"*.php",
					"",
					"*.php",
					".php",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"console.log",
					"template",
					"bands",
					"echo",
					"echo '//'",
					"echo \"//\"",
					"echo //",
					"$result",
					"migrate_db.inc.php",
					"baselines.length > 0",
					"opening",
					"baseline",
					"coffeeFinish",
					"baselineLineitemName",
					"baselineLineitemId",
					"baselineVolume",
					"bandsAboveBase",
					"getChangesForLineItem",
					"trigger",
					"loadingOverlay",
					"coffee.png",
					"int",
					"arguments",
					"addArc",
					"VPHist",
					"history",
					"data.push",
					"<tr data-line-id=\"<?= $lineItem['prim_uid'] ?>\" data-line-name=\"<?= $lineItem['name'] ?>\">",
					"80",
					"VARCHAR",
					"data.push",
					"push",
					"data.push",
					"validation_title",
					"validate",
					"1",
					"2",
					"2*this.drunkness",
					"offset",
					"scale",
					"[0]",
					"Bottle",
					"xBottle",
					"guenther",
					"sprite",
					"x",
					"body.",
					"guenther",
					"x",
					"body",
					"validate",
					"price",
					"$lineItem['current_volume']",
					"current_volume",
					"validate-line",
					"validate",
					"validate-line",
					"price",
					"$(this)",
					"console",
					"line-item-save",
					"rs_invoice",
					"line-item-save",
					"radio",
					"validation_uid",
					"validation-id=\"\"",
					"i18(\"LABELS/INVOICE/\".$lineItem['validation_uid'])",
					"validation_titel",
					"validaton",
					"saveLineItem",
					"decimalFormater",
					"saveLineitem",
					"INVOICE/\".$lineItem['validation_uid']",
					"$lineItem['validation_uid']",
					"spend_pool_definition",
					"t_m",
					"flat_fees",
					"invoice_lineitem_flat_fees",
					"flat_fees",
					"savelinei",
					"savelineitem",
					"saveValidationType",
					"process_image_url",
					"image",
					"CustomerLogo",
					"a name=\"CustomerLogo\"",
					"saveLineItem",
					"contract",
					"datepicker",
					"response",
					">>>>",
					"http_host",
					"?remote_service",
					"No access",
					"NO_ACCESS",
					"download",
					"sign",
					"app.i",
					"download",
					"bayertraining",
					"-.-",
					"people",
					"wood",
					"Вы можете указать",
					"бонусы",
					"увеличен",
					"увеличен до",
					"увеличен",
					"Уровень здания ",
					"По крайней мере одно из требуемых исследований не были изучены (Следующее требуемое",
					"По крайней мере одно из требуемых исследований не были изучены (Следующее требуемое:",
					"abbott",
					"currency",
					"hey",
					"// ",
					"migrate",
					"migrate_db.inc.php",
					"migrate_db_inc.php",
					"demolition",
					"complete",
					"relo",
					"build",
					"demolition",
					"cancel",
					"cancelUpgrade",
					"cancel_upgrade",
					"provider_select",
					"#chart_"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"The level of the building "
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/julian/git/open3-dev"
				}
			],
			"groups":
			[
				{
					"selected": 6,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/julian/git/open3-dev/gui/js/actions/invoice_framework.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 66464,
								"regions":
								{
								},
								"selection":
								[
									[
										66166,
										66166
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 21489.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/julian/git/open3-dev/src/modules/governance/includes/DataGovernance.inc.php",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 44932,
								"regions":
								{
								},
								"selection":
								[
									[
										39333,
										39333
									]
								],
								"settings":
								{
									"syntax": "Packages/PHP/PHP.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 11602.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/julian/git/open3-dev/src/modules/invoice_management/includes/DataInvoiceManagement.inc.php",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 51695,
								"regions":
								{
								},
								"selection":
								[
									[
										51608,
										51608
									]
								],
								"settings":
								{
									"syntax": "Packages/PHP/PHP.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 15600.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/home/julian/git/open3-dev/app/logs/app.log",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1,
								"regions":
								{
								},
								"selection":
								[
									[
										1,
										1
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/home/julian/git/open3-dev/app/logs/php-errors.log",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/home/julian/git/open3-dev/src/modules/invoice_management/gui/html/invoice_framework.php",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 118203,
								"regions":
								{
								},
								"selection":
								[
									[
										104660,
										104660
									]
								],
								"settings":
								{
									"syntax": "Packages/PHP/PHP.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 13741.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/home/julian/git/open3-dev/res/migrations/file 20150203.php",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 33081,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/PHP/PHP.tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 78.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/home/julian/git/open3-dev/gui/js/plugins/gridsterCharts/gridsterCharts.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 58691,
								"regions":
								{
								},
								"selection":
								[
									[
										33066,
										33066
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 8313.0,
								"zoom_level": 1.0
							},
							"stack_index": 9,
							"type": "text"
						},
						{
							"buffer": 8,
							"file": "/home/julian/git/open3-dev/gui/js/actions/custom_dashboard.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 71811,
								"regions":
								{
								},
								"selection":
								[
									[
										39650,
										39650
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 8001.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 9,
							"file": "/home/julian/git/open3-dev/gui/js/utils/worker/chartsRemoteWorker.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 73807,
								"regions":
								{
								},
								"selection":
								[
									[
										25685,
										25685
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 8573.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 21.0
			},
			"input":
			{
				"height": 31.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 100.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.unsaved_changes":
			{
				"height": 100.0
			},
			"output.xdebug":
			{
				"height": 159.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,0,19,1920,1080,1920,1080",
			"project": "",
			"replace":
			{
				"height": 38.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"chartwork",
						"gui/js/utils/worker/chartsRemoteWorker.js"
					],
					[
						"customdash",
						"gui/js/actions/custom_dashboard.js"
					],
					[
						"gridster",
						"gui/js/plugins/gridsterCharts/gridsterCharts.js"
					],
					[
						"phperr",
						"app/logs/php-errors.log"
					],
					[
						"applo",
						"app/logs/app.log"
					],
					[
						"rsinvoice",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"invoiceframe",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"datainvoice",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoicemana",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"invoicefr",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"autoload",
						"src/includes/libs/lib/PhpParser/Autoloader.php"
					],
					[
						"mainten",
						"app/logs/maintenance.log"
					],
					[
						"app",
						"app/logs/app.log"
					],
					[
						"enus",
						"src/modules/invoice_management/i18/en_us.xml"
					],
					[
						"datainv",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"dataino",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"templat",
						"gui/js/utils/templating.js"
					],
					[
						"dashboar",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"gridsterchar",
						"gui/js/plugins/gridsterCharts/gridsterCharts.js"
					],
					[
						"defau",
						"gui/themes/default/default.php"
					],
					[
						"templa",
						"gui/js/utils/templating.js"
					],
					[
						"invoicefram",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"acces",
						"res/SQL/access.ini"
					],
					[
						"performamana",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"access",
						"res/SQL/access.ini"
					],
					[
						"rsinvoic",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"datainvo",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"datagover",
						"src/modules/governance/includes/DataGovernance.inc.php"
					],
					[
						"gove",
						"src/modules/governance/governance.inc.php"
					],
					[
						"invoiceframew",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"invoicemangeinc",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"datainvoic",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"rs.repos",
						"src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php"
					],
					[
						"configinc",
						"configs/config.inc.php"
					],
					[
						"docueditutinc",
						"src/modules/document_editor/includes/helpers/document_editor_utils.inc.php"
					],
					[
						"documenteditor",
						"src/modules/document_editor/gui/html/document_editor.php"
					],
					[
						"document",
						"src/modules/document_editor/document_editor.inc.php"
					],
					[
						"rsinv",
						"src/modules/invoice_management/extensions/remote_service/rs_invoice_management/class.rs_invoice_management.inc.php"
					],
					[
						"performninc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"dataccr",
						"src/modules/ccr/includes/DataCCR.inc.php"
					],
					[
						"invoicemangainc",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoiceframp",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"invocefra",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoice",
						"src/modules/invoice_management/gui/js/actions/invoice_framework.js"
					],
					[
						"",
						"configs/config.inc.php"
					],
					[
						"config",
						"configs/config.inc.php"
					],
					[
						"remoteser",
						"src/modules/core/extensions/class.remote_service.php"
					],
					[
						"rsrepo",
						"src/modules/repository/extensions/remote_service/rs_repository/class.rs_repository.inc.php"
					],
					[
						"default",
						"gui/themes/default/default.php"
					],
					[
						"performancinc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"invoiceenus",
						"src/modules/invoice_management/i18/en_us.xml"
					],
					[
						"maintenaclo",
						"app/logs/maintenance.log"
					],
					[
						"invoicefra",
						"gui/js/actions/invoice_framework.js"
					],
					[
						"invoicema",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"remoteserv",
						"src/modules/core/extensions/class.remote_service.php"
					],
					[
						"repos",
						"src/modules/repository/repository.inc.php"
					],
					[
						"invoicemanag",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"datainvoi",
						"src/modules/invoice_management/includes/DataInvoiceManagement.inc.php"
					],
					[
						"invoicemanainc",
						"src/modules/invoice_management/invoice_management.inc.php"
					],
					[
						"20151014",
						"res/migrations/file 20151014.php"
					],
					[
						"governinc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"maintena",
						"app/logs/maintenance.log"
					],
					[
						"maintelo",
						"app/logs/maintenance.log"
					],
					[
						"mainte",
						"install/maintenance.php"
					],
					[
						"demo",
						"izariam/views/view/demolition.php"
					],
					[
						"governaninc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"all_ac",
						"src/modules/aidre_logs/gui/html/all_actions.php"
					],
					[
						"1020",
						"res/migrations/file 20151020.php"
					],
					[
						"1019",
						"res/migrations/file 20151019.php"
					],
					[
						"1016",
						"res/migrations/file 20151016.php"
					],
					[
						"1014",
						"res/migrations/file 20151014.php"
					],
					[
						"1013",
						"res/migrations/file 20151013.php"
					],
					[
						"default.php",
						"gui/themes/default/default.php"
					],
					[
						"coreinc",
						"src/modules/core/core.inc.php"
					],
					[
						"meetinenus",
						"src/modules/meetings/i18/en_us.xml"
					],
					[
						"customdas",
						"gui/js/actions/custom_dashboard.js"
					],
					[
						"applog",
						"app/logs/app.log"
					],
					[
						"docuem",
						"src/modules/document_editor/gui/html/document_editor.php"
					],
					[
						"performinc",
						"src/modules/performance_management/performance_management.inc.php"
					],
					[
						"governancin",
						"src/modules/governance/governance.inc.php"
					],
					[
						"documentediinc",
						"src/modules/document_editor/document_editor.inc.php"
					],
					[
						"performancdashph",
						"src/modules/design_overview/gui/html/performance_dashboard.php"
					],
					[
						"aidrestart",
						"gui/js/actions/aidre_start.js"
					],
					[
						"dash",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"perfrdasphp",
						"src/modules/design_overview/gui/html/performance_dashboard.php"
					],
					[
						"performance",
						"gui/js/actions/performance_dashboard.js"
					],
					[
						"contracmanagem",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"dashbiar",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"phper",
						"app/logs/php-errors.log"
					],
					[
						"contramanagstar",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"rscustomi",
						"src/modules/design_overview/extensions/remote_service/rs_custom_ibm/class.rs_custom_ibm.inc.php"
					],
					[
						"dashboard",
						"gui/js/plugins/dashboarding/dashboarding.js"
					],
					[
						"designover",
						"gui/js/actions/design_overview.js"
					],
					[
						"designoverinc",
						"src/modules/design_overview/includes/DataDesignOverview.inc.php"
					],
					[
						"designoverenus",
						"src/modules/design_overview/i18/en_us.xml"
					],
					[
						"contract_mangenus",
						"src/modules/contract_management/i18/en_us.xml"
					],
					[
						"contracenus",
						"src/modules/contract_changes/i18/en_us.xml"
					],
					[
						"contracmanaginc",
						"src/modules/contract_management/contract_management.inc.php"
					],
					[
						"contractmanag",
						"src/modules/contract_management/includes/DataContractManagement.inc.php"
					],
					[
						"contract",
						"src/modules/design_overview/gui/html/contract_management_start.php"
					],
					[
						"newdle",
						"gui/js/actions/new_deliverable.js"
					],
					[
						"newdeli",
						"src/modules/deliverables/gui/html/new_deliverable.php"
					],
					[
						"editdle",
						"src/modules/deliverables/gui/html/edit_deliverable.php"
					],
					[
						"manten",
						"app/logs/maintenance.log"
					],
					[
						"datade",
						"src/modules/deliverables/includes/DataDeliverables.inc.php"
					],
					[
						"delive",
						"src/modules/deliverables/deliverables.inc.php"
					],
					[
						"appl",
						"app/logs/app.log"
					],
					[
						"governanceinc",
						"src/modules/governance/governance.inc.php"
					],
					[
						"perfcof",
						"src/modules/performance_management/config.xml"
					],
					[
						"singlerepo",
						"src/modules/performance_management/gui/html/single_report.php"
					],
					[
						"perfenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"sladash",
						"src/modules/performance_management/gui/html/sla_dashboard.php"
					],
					[
						"dataperf",
						"src/modules/performance_management/includes/DataPerformanceManagement.inc.php"
					],
					[
						"datameeting",
						"src/modules/meetings/includes/DataMeetings.inc.php"
					],
					[
						"meetings",
						"src/modules/meetings/meetings.inc.php"
					],
					[
						"slaval",
						"src/modules/performance_management/gui/html/sla_validation.php"
					],
					[
						"newsla",
						"src/modules/performance_management/gui/html/new_sla.php"
					],
					[
						"invoi",
						"src/modules/invoice_management/gui/html/invoice_framework.php"
					],
					[
						"aplo",
						"app/logs/app.log"
					],
					[
						"editsla",
						"gui/js/actions/edit_sla.js"
					],
					[
						"approves",
						"src/modules/performance_management/gui/html/approve_sla.php"
					],
					[
						"slavali",
						"src/modules/performance_management/gui/html/sla_validation.php"
					],
					[
						"performmanaenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"editboar",
						"src/modules/governance/gui/html/edit_board.php"
					],
					[
						"perforenus",
						"src/modules/performance_management/i18/en_us.xml"
					],
					[
						"rsusermanage",
						"src/modules/user_management/extensions/remote_service/rs_user_management/class.rs_user_management.inc.php"
					],
					[
						"rsmeeting",
						"src/modules/meetings/extensions/remote_service/rs_meetings/class.rs_meetings.inc.php"
					],
					[
						"governacinc",
						"src/modules/governance/governance.inc.php"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 92.0,
				"last_filter": "getcontractfor",
				"selected_items":
				[
					[
						"getcontractfor",
						"getAllContractsForProvider"
					],
					[
						"moduleinstal",
						"moduleInstalled"
					],
					[
						"singlereport",
						"single_report"
					],
					[
						"detailed",
						"detailed_view"
					],
					[
						"fillcurr",
						"fillCurrencyLists"
					],
					[
						"image_",
						"process_image_url"
					],
					[
						"file",
						"getFile"
					],
					[
						"updateaud",
						"updateAuditUserRights"
					],
					[
						"getallactiveus",
						"getAllActiveUsers"
					],
					[
						"futuremeet",
						"updateAttendeeInFutureMeetings"
					],
					[
						"demoli",
						"demolition"
					],
					[
						"admin",
						"admin"
					],
					[
						"loadview",
						"load_view"
					],
					[
						"saveboard",
						"save_board"
					],
					[
						"db_get_co",
						"db_get_col"
					],
					[
						"i18",
						"i18"
					],
					[
						"getalluser",
						"getAllActiveUsers"
					],
					[
						"adduser",
						"addUser"
					],
					[
						"currenc",
						"getCurrencyCode"
					],
					[
						"savekpi",
						"saveProviderKPI"
					],
					[
						"app_log",
						"app_log"
					],
					[
						"kpiimport",
						"kpi_import"
					],
					[
						"deletesla",
						"deleteSLA"
					],
					[
						"quickcrea",
						"quickCreateSLA"
					],
					[
						"quick",
						"quickCodeHandler"
					],
					[
						"newsla",
						"new_sla"
					],
					[
						"getdocu",
						"getDocument"
					],
					[
						"quickcre",
						"quickCreate"
					],
					[
						"getProvider",
						"getProviderForContract"
					],
					[
						"loadvie",
						"load_view"
					],
					[
						"getprovider",
						"getProviderForContract"
					],
					[
						"load_view",
						"load_view"
					],
					[
						"savenotif",
						"save_notification"
					],
					[
						"sendnoti",
						"send_notification"
					],
					[
						"getkpival",
						"getKPIValueForMonth"
					],
					[
						"getbare",
						"getBareKpisForProvider"
					],
					[
						"all provider",
						"getAllProviders"
					],
					[
						"getRowIter",
						"getRowIterator"
					],
					[
						"getallboar",
						"getAllBoards"
					],
					[
						"kpivalue",
						"getKPIValueForMonth"
					],
					[
						"loadmod",
						"load_module"
					],
					[
						"getcontract",
						"getContract"
					],
					[
						"db_tab",
						"db_table_exists"
					],
					[
						"db_table",
						"db_table_exists"
					],
					[
						"tpl",
						"tp-loader"
					],
					[
						"notification",
						"send_notification"
					],
					[
						"user_se",
						"user_settings"
					],
					[
						"suppliers",
						"getAllSuppliers"
					],
					[
						"get supplier",
						"getSuppliers"
					],
					[
						"all supp",
						"getAllSuppliers"
					]
				],
				"width": 1196.0
			},
			"selected_group": 0,
			"settings":
			{
				"xdebug":
				{
					"hide_conflict": false,
					"restore_index":
					{
						"104":
						{
							"group": 0,
							"index": 3
						},
						"112":
						{
							"group": 0,
							"index": 1
						},
						"269":
						{
							"group": 0,
							"index": 4
						},
						"78":
						{
							"group": 0,
							"index": 0
						},
						"95":
						{
							"group": 0,
							"index": 2
						}
					},
					"restore_layout":
					{
						"cells":
						[
							[
								0,
								0,
								1,
								1
							]
						],
						"cols":
						[
							0.0,
							1.0
						],
						"rows":
						[
							0.0,
							1.0
						]
					}
				}
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 295.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 39,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
